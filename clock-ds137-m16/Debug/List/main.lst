
AVRASM ver. 2.1.30  C:\projects\clock\Debug\List\main.asm Wed Nov 22 07:48:57 2017

C:\projects\clock\Debug\List\main.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\projects\clock\Debug\List\main.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\projects\clock\Debug\List\main.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\projects\clock\Debug\List\main.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\projects\clock\Debug\List\main.asm(1092): warning: Register r9 already defined by the .DEF directive
C:\projects\clock\Debug\List\main.asm(1093): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _page=R5
                 	.DEF _key=R4
                 	.DEF _last_key=R7
                 	.DEF __lcd_x=R6
                 	.DEF __lcd_y=R9
                 	.DEF __lcd_maxx=R8
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0088 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0206 	JMP  _timer1_ovf_isr
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00002a 0001      	.DW  0x0001
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00002b 0000
00002c ff00      	.DB  0x0,0x0,0x0,0xFF
                 
                 _0x15:
00002d 000a
00002e 0c0b
00002f 0201
000030 0d03      	.DB  0xA,0x0,0xB,0xC,0x1,0x2,0x3,0xD
000031 0504
000032 0e06
000033 0807
000034 0f09      	.DB  0x4,0x5,0x6,0xE,0x7,0x8,0x9,0xF
                 _0x0:
000035 2020
000036 2020
000037 2020
000038 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000039 2020
00003a 2020
00003b 2020
00003c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00003d 4100
00003e 7972
00003f 6e61
000040 5320      	.DB  0x0,0x41,0x72,0x79,0x61,0x6E,0x20,0x53
000041 7961
000042 4820
000043 6c65
000044 6f6c      	.DB  0x61,0x79,0x20,0x48,0x65,0x6C,0x6C,0x6F
000045 0021
000046 7250
000047 7365
000048 2073      	.DB  0x21,0x0,0x50,0x72,0x65,0x73,0x73,0x20
000049 4f5b
00004a 5d4e
00004b 2500
00004c 3230      	.DB  0x5B,0x4F,0x4E,0x5D,0x0,0x25,0x30,0x32
00004d 3a64
00004e 3025
00004f 6432
000050 253a      	.DB  0x64,0x3A,0x25,0x30,0x32,0x64,0x3A,0x25
000051 3230
000052 2064
000053 2020
000054 2020      	.DB  0x30,0x32,0x64,0x20,0x20,0x20,0x20,0x20
000055 2020
000056 0020
000057 3032
000058 2500      	.DB  0x20,0x20,0x20,0x0,0x32,0x30,0x0,0x25
000059 3230
00005a 2f64
00005b 3025
00005c 6432      	.DB  0x30,0x32,0x64,0x2F,0x25,0x30,0x32,0x64
00005d 252f
00005e 3230
00005f 2064
000060 2020      	.DB  0x2F,0x25,0x30,0x32,0x64,0x20,0x20,0x20
000061 0020      	.DB  0x20,0x0
                 _0x2000003:
000062 c080      	.DB  0x80,0xC0
                 _0x2020000:
000063 4e2d
000064 4e41
C:\projects\clock\Debug\List\main.asm(1151): warning: .cseg .db misalignment - padding zero byte
000065 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
C:\projects\clock\Debug\List\main.asm(1153): warning: .cseg .db misalignment - padding zero byte
000066 0001      	.DB  0x1
                 _0x20A0000:
000067 4e2d
000068 4e41
000069 4900
00006a 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\projects\clock\Debug\List\main.asm(1156): warning: .cseg .db misalignment - padding zero byte
00006b 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00006c 0001      	.DW  0x01
00006d 0002      	.DW  0x02
00006e 0054      	.DW  __REG_BIT_VARS*2
                 
00006f 0004      	.DW  0x04
000070 0004      	.DW  0x04
000071 0056      	.DW  __REG_VARS*2
                 
000072 0011      	.DW  0x11
000073 0160      	.DW  _0x1D
000074 006a      	.DW  _0x0*2
                 
000075 0011      	.DW  0x11
000076 0171      	.DW  _0x24
000077 007b      	.DW  _0x0*2+17
                 
000078 000b      	.DW  0x0B
000079 0182      	.DW  _0x24+17
00007a 008c      	.DW  _0x0*2+34
                 
00007b 0003      	.DW  0x03
00007c 018d      	.DW  _0x24+28
00007d 00ae      	.DW  _0x0*2+68
                 
00007e 0003      	.DW  0x03
00007f 0190      	.DW  _0x24+31
000080 00ae      	.DW  _0x0*2+68
                 
000081 0002      	.DW  0x02
000082 01ab      	.DW  __base_y_G100
000083 00c4      	.DW  _0x2000003*2
                 
000084 0001      	.DW  0x01
000085 01af      	.DW  __seed_G105
000086 00cc      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000087 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000088 94f8      	CLI
000089 27ee      	CLR  R30
00008a bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00008b e0f1      	LDI  R31,1
00008c bffb      	OUT  GICR,R31
00008d bfeb      	OUT  GICR,R30
00008e bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00008f e08d      	LDI  R24,(14-2)+1
000090 e0a2      	LDI  R26,2
000091 27bb      	CLR  R27
                 __CLEAR_REG:
000092 93ed      	ST   X+,R30
000093 958a      	DEC  R24
000094 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000095 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000096 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000097 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000098 93ed      	ST   X+,R30
000099 9701      	SBIW R24,1
00009a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00009b ede8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00009c e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00009d 9185      	LPM  R24,Z+
00009e 9195      	LPM  R25,Z+
00009f 9700      	SBIW R24,0
0000a0 f061      	BREQ __GLOBAL_INI_END
0000a1 91a5      	LPM  R26,Z+
0000a2 91b5      	LPM  R27,Z+
0000a3 9005      	LPM  R0,Z+
0000a4 9015      	LPM  R1,Z+
0000a5 01bf      	MOVW R22,R30
0000a6 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000a7 9005      	LPM  R0,Z+
0000a8 920d      	ST   X+,R0
0000a9 9701      	SBIW R24,1
0000aa f7e1      	BRNE __GLOBAL_INI_LOOP
0000ab 01fb      	MOVW R30,R22
0000ac cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000ad e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000ae bfed      	OUT  SPL,R30
0000af e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000b0 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000b1 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000b2 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000b3 940c 0225 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <i2c.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;
                 ;
                 ;unsigned char buffer[16];
                 ;unsigned char page = 0;
                 ;unsigned char key = 0;
                 ;unsigned char last_key=0xff;
                 ;
                 ;bit update = 1;
                 ;
                 ;unsigned long millis = 0;
                 ;unsigned long last_time = 0;
                 ;
                 ;
                 ;#define F_CPU 8000000
                 ;#define GO(p) page=p; update=1;
                 ;#define UP() update = 1;
                 ;
                 ;#define DIS(p) if(page == p && update) {
                 ;#define SID() update = 0; }
                 ;
                 ;#define KBD() key = read(); if(key != 0xff && key != last_key) {
                 ;#define DBK() last_key = key; } if (key == 0xff) last_key=0xff;
                 ;
                 ;#define KEY_ON 10
                 ;#define KEY_EQL 11
                 ;#define KEY_ADD 12
                 ;#define KEY_SUB 13
                 ;#define KEY_MUL 14
                 ;#define KEY_DIV 15
                 ;
                 ;#define D_READ   0xD1u
                 ;#define D_WRITE  0xD0u
                 ;
                 ;#define D_SEC	0x00u
                 ;#define D_DATE	0x04u
                 ;#define D_CR	0x07u
                 ;
                 ;typedef struct
                 ;{
                 ;  unsigned char sec;
                 ;  unsigned char min;
                 ;  unsigned char hour;
                 ;  unsigned char weekDay;
                 ;  unsigned char date;
                 ;  unsigned char month;
                 ;  unsigned char year;
                 ;} rtc;
                 ;
                 ;void set(rtc* date, unsigned char index, unsigned char value) {
                 ; 0000 0036 void set(rtc* date, unsigned char index, unsigned char value) {
                 
                 	.CSEG
                 _set:
                 ; .FSTART _set
                 ; 0000 0037 	switch(index){
0000b5 93aa      	ST   -Y,R26
                 ;	*date -> Y+2
                 ;	index -> Y+1
                 ;	value -> Y+0
0000b6 81e9      	LDD  R30,Y+1
0000b7 e0f0      	LDI  R31,0
                 ; 0000 0038 		case 0:
0000b8 9730      	SBIW R30,0
0000b9 f431      	BRNE _0x6
                 ; 0000 0039 			date->hour = value;
0000ba 81e8      	LD   R30,Y
                +
0000bb 81aa     +LDD R26 , Y + 2
0000bc 81bb     +LDD R27 , Y + 2 + 1
0000bd 9612     +ADIW R26 , 2
0000be 93ec     +ST X , R30
                 	__PUTB1SNS 2,2
                 ; 0000 003A 			break;
0000bf c030      	RJMP _0x5
                 ; 0000 003B 		case 1:
                 _0x6:
0000c0 30e1      	CPI  R30,LOW(0x1)
0000c1 e0a0      	LDI  R26,HIGH(0x1)
0000c2 07fa      	CPC  R31,R26
0000c3 f431      	BRNE _0x7
                 ; 0000 003C 			date->min = value;
0000c4 81e8      	LD   R30,Y
                +
0000c5 81aa     +LDD R26 , Y + 2
0000c6 81bb     +LDD R27 , Y + 2 + 1
0000c7 9611     +ADIW R26 , 1
0000c8 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
                 ; 0000 003D 			break;
0000c9 c026      	RJMP _0x5
                 ; 0000 003E 		case 2:
                 _0x7:
0000ca 30e2      	CPI  R30,LOW(0x2)
0000cb e0a0      	LDI  R26,HIGH(0x2)
0000cc 07fa      	CPC  R31,R26
0000cd f429      	BRNE _0x8
                 ; 0000 003F 			date->sec = value;
0000ce 81e8      	LD   R30,Y
0000cf 81aa      	LDD  R26,Y+2
0000d0 81bb      	LDD  R27,Y+2+1
0000d1 93ec      	ST   X,R30
                 ; 0000 0040 			break;
0000d2 c01d      	RJMP _0x5
                 ; 0000 0041 		case 3:
                 _0x8:
0000d3 30e3      	CPI  R30,LOW(0x3)
0000d4 e0a0      	LDI  R26,HIGH(0x3)
0000d5 07fa      	CPC  R31,R26
0000d6 f431      	BRNE _0x9
                 ; 0000 0042 			date->year = value;
0000d7 81e8      	LD   R30,Y
                +
0000d8 81aa     +LDD R26 , Y + 2
0000d9 81bb     +LDD R27 , Y + 2 + 1
0000da 9616     +ADIW R26 , 6
0000db 93ec     +ST X , R30
                 	__PUTB1SNS 2,6
                 ; 0000 0043 			break;
0000dc c013      	RJMP _0x5
                 ; 0000 0044 		case 4:
                 _0x9:
0000dd 30e4      	CPI  R30,LOW(0x4)
0000de e0a0      	LDI  R26,HIGH(0x4)
0000df 07fa      	CPC  R31,R26
0000e0 f431      	BRNE _0xA
                 ; 0000 0045 			date->month = value;
0000e1 81e8      	LD   R30,Y
                +
0000e2 81aa     +LDD R26 , Y + 2
0000e3 81bb     +LDD R27 , Y + 2 + 1
0000e4 9615     +ADIW R26 , 5
0000e5 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
                 ; 0000 0046 			break;
0000e6 c009      	RJMP _0x5
                 ; 0000 0047 		case 5:
                 _0xA:
0000e7 30e5      	CPI  R30,LOW(0x5)
0000e8 e0a0      	LDI  R26,HIGH(0x5)
0000e9 07fa      	CPC  R31,R26
0000ea f429      	BRNE _0x5
                 ; 0000 0048 			date->date = value;
0000eb 81e8      	LD   R30,Y
                +
0000ec 81aa     +LDD R26 , Y + 2
0000ed 81bb     +LDD R27 , Y + 2 + 1
0000ee 9614     +ADIW R26 , 4
0000ef 93ec     +ST X , R30
                 	__PUTB1SNS 2,4
                 ; 0000 0049 			break;
                 ; 0000 004A 	}
                 _0x5:
                 ; 0000 004B }
0000f0 9624      	ADIW R28,4
0000f1 9508      	RET
                 ; .FEND
                 ;
                 ;unsigned char get(rtc* date, unsigned char index) {
                 ; 0000 004D unsigned char get(rtc* date, unsigned char index) {
                 _get:
                 ; .FSTART _get
                 ; 0000 004E 	switch(index){
0000f2 93aa      	ST   -Y,R26
                 ;	*date -> Y+1
                 ;	index -> Y+0
0000f3 81e8      	LD   R30,Y
0000f4 e0f0      	LDI  R31,0
                 ; 0000 004F 		case 0:
0000f5 9730      	SBIW R30,0
0000f6 f429      	BRNE _0xF
                 ; 0000 0050 			return date->hour;
0000f7 81e9      	LDD  R30,Y+1
0000f8 81fa      	LDD  R31,Y+1+1
0000f9 81e2      	LDD  R30,Z+2
0000fa 940c 03b6 	JMP  _0x20C0007
                 ; 0000 0051 		case 1:
                 _0xF:
0000fc 30e1      	CPI  R30,LOW(0x1)
0000fd e0a0      	LDI  R26,HIGH(0x1)
0000fe 07fa      	CPC  R31,R26
0000ff f429      	BRNE _0x10
                 ; 0000 0052 			return date->min;
000100 81e9      	LDD  R30,Y+1
000101 81fa      	LDD  R31,Y+1+1
000102 81e1      	LDD  R30,Z+1
000103 940c 03b6 	JMP  _0x20C0007
                 ; 0000 0053 		case 2:
                 _0x10:
000105 30e2      	CPI  R30,LOW(0x2)
000106 e0a0      	LDI  R26,HIGH(0x2)
000107 07fa      	CPC  R31,R26
000108 f429      	BRNE _0x11
                 ; 0000 0054 			return date->sec;
000109 81a9      	LDD  R26,Y+1
00010a 81ba      	LDD  R27,Y+1+1
00010b 91ec      	LD   R30,X
00010c 940c 03b6 	JMP  _0x20C0007
                 ; 0000 0055 		case 3:
                 _0x11:
00010e 30e3      	CPI  R30,LOW(0x3)
00010f e0a0      	LDI  R26,HIGH(0x3)
000110 07fa      	CPC  R31,R26
000111 f429      	BRNE _0x12
                 ; 0000 0056 			return date->year;
000112 81e9      	LDD  R30,Y+1
000113 81fa      	LDD  R31,Y+1+1
000114 81e6      	LDD  R30,Z+6
000115 940c 03b6 	JMP  _0x20C0007
                 ; 0000 0057 		case 4:
                 _0x12:
000117 30e4      	CPI  R30,LOW(0x4)
000118 e0a0      	LDI  R26,HIGH(0x4)
000119 07fa      	CPC  R31,R26
00011a f429      	BRNE _0x13
                 ; 0000 0058 			return date->month;
00011b 81e9      	LDD  R30,Y+1
00011c 81fa      	LDD  R31,Y+1+1
00011d 81e5      	LDD  R30,Z+5
00011e 940c 03b6 	JMP  _0x20C0007
                 ; 0000 0059 		case 5:
                 _0x13:
000120 30e5      	CPI  R30,LOW(0x5)
000121 e0a0      	LDI  R26,HIGH(0x5)
000122 07fa      	CPC  R31,R26
000123 f429      	BRNE _0xE
                 ; 0000 005A 			return date->date;
000124 81e9      	LDD  R30,Y+1
000125 81fa      	LDD  R31,Y+1+1
000126 81e4      	LDD  R30,Z+4
000127 940c 03b6 	JMP  _0x20C0007
                 ; 0000 005B 	}
                 _0xE:
                 ; 0000 005C }
000129 940c 03b6 	JMP  _0x20C0007
                 ; .FEND
                 ;#define HI_NIBBLE(b) (((b) >> 4) & 0x0F)
                 ;#define LO_NIBBLE(b) ((b) & 0x0F)
                 ;
                 ;unsigned char bcd_to_byte(unsigned char bcd){
                 ; 0000 0060 unsigned char bcd_to_byte(unsigned char bcd){
                 _bcd_to_byte:
                 ; .FSTART _bcd_to_byte
                 ; 0000 0061     return (char)((HI_NIBBLE(bcd)*10)+(LO_NIBBLE(bcd)));
00012b 93aa      	ST   -Y,R26
                 ;	bcd -> Y+0
00012c 81e8      	LD   R30,Y
00012d 95e2      	SWAP R30
00012e 70ef      	ANDI R30,LOW(0xF)
00012f e0aa      	LDI  R26,LOW(10)
000130 02ea      	MULS R30,R26
000131 01f0      	MOVW R30,R0
000132 2fae      	MOV  R26,R30
000133 81e8      	LD   R30,Y
000134 70ef      	ANDI R30,LOW(0xF)
000135 0fea      	ADD  R30,R26
000136 940c 03e4 	JMP  _0x20C0006
                 ; 0000 0062 }
                 ; .FEND
                 ;
                 ;unsigned char byte_to_bcd(unsigned char byte){
                 ; 0000 0064 unsigned char byte_to_bcd(unsigned char byte){
                 _byte_to_bcd:
                 ; .FSTART _byte_to_bcd
                 ; 0000 0065     return (char) ((byte / 10)*16)+(byte % 10);
000138 93aa      	ST   -Y,R26
                 ;	byte -> Y+0
000139 81a8      	LD   R26,Y
00013a e0b0      	LDI  R27,0
00013b e0ea      	LDI  R30,LOW(10)
00013c e0f0      	LDI  R31,HIGH(10)
00013d 940e 0c4f 	CALL __DIVW21
00013f e1a0      	LDI  R26,LOW(16)
000140 02ea      	MULS R30,R26
000141 2d60      	MOV  R22,R0
000142 81a8      	LD   R26,Y
000143 27bb      	CLR  R27
000144 e0ea      	LDI  R30,LOW(10)
000145 e0f0      	LDI  R31,HIGH(10)
000146 940e 0c85 	CALL __MODW21
000148 0fe6      	ADD  R30,R22
000149 940c 03e4 	JMP  _0x20C0006
                 ; 0000 0066 }
                 ; .FEND
                 ;
                 ;
                 ;void rtc_init() {
                 ; 0000 0069 void rtc_init() {
                 _rtc_init:
                 ; .FSTART _rtc_init
                 ; 0000 006A 	i2c_start();
00014b 940e 0855 	CALL SUBOPT_0x0
                 ; 0000 006B 	i2c_write(D_WRITE);
                 ; 0000 006C 	i2c_write(D_CR);
00014d e0a7      	LDI  R26,LOW(7)
00014e 940e 0a29 	CALL _i2c_write
                 ; 0000 006D 	i2c_write(0x00);
000150 e0a0      	LDI  R26,LOW(0)
000151 940e 085a 	CALL SUBOPT_0x1
                 ; 0000 006E 	i2c_stop();
                 ; 0000 006F }
000153 9508      	RET
                 ; .FEND
                 ;
                 ;rtc rtc_get() {
                 ; 0000 0071 rtc rtc_get() {
                 _rtc_get:
                 ; .FSTART _rtc_get
                 ; 0000 0072 	rtc a;
                 ; 0000 0073 	i2c_start();
000154 972e      	SBIW R28,14
                 ;	a -> Y+0
000155 940e 0855 	CALL SUBOPT_0x0
                 ; 0000 0074 	i2c_write(D_WRITE);
                 ; 0000 0075 	i2c_write(D_SEC);
000157 e0a0      	LDI  R26,LOW(0)
000158 940e 085a 	CALL SUBOPT_0x1
                 ; 0000 0076 	i2c_stop();
                 ; 0000 0077 
                 ; 0000 0078 	i2c_start();
00015a 940e 09f5 	CALL _i2c_start
                 ; 0000 0079 	i2c_write(D_READ);
00015c eda1      	LDI  R26,LOW(209)
00015d 940e 0a29 	CALL _i2c_write
                 ; 0000 007A 
                 ; 0000 007B 	a.sec = bcd_to_byte(i2c_read(1));
00015f 940e 085e 	CALL SUBOPT_0x2
000161 83e8      	ST   Y,R30
                 ; 0000 007C 	a.min = bcd_to_byte(i2c_read(1));
000162 940e 085e 	CALL SUBOPT_0x2
000164 83e9      	STD  Y+1,R30
                 ; 0000 007D 	a.hour = bcd_to_byte(i2c_read(1));
000165 940e 085e 	CALL SUBOPT_0x2
000167 83ea      	STD  Y+2,R30
                 ; 0000 007E 	a.weekDay = bcd_to_byte(i2c_read(1));
000168 940e 085e 	CALL SUBOPT_0x2
00016a 83eb      	STD  Y+3,R30
                 ; 0000 007F 	a.date = bcd_to_byte(i2c_read(1));
00016b 940e 085e 	CALL SUBOPT_0x2
00016d 83ec      	STD  Y+4,R30
                 ; 0000 0080 	a.month = bcd_to_byte(i2c_read(1));
00016e 940e 085e 	CALL SUBOPT_0x2
000170 83ed      	STD  Y+5,R30
                 ; 0000 0081 	a.year =bcd_to_byte(i2c_read(0));
000171 e0a0      	LDI  R26,LOW(0)
000172 940e 0a0e 	CALL _i2c_read
000174 2fae      	MOV  R26,R30
000175 dfb5      	RCALL _bcd_to_byte
000176 83ee      	STD  Y+6,R30
                 ; 0000 0082 
                 ; 0000 0083 	i2c_stop();
000177 940e 0a04 	CALL _i2c_stop
                 ; 0000 0084 
                 ; 0000 0085 	return a;
000179 01fe      	MOVW R30,R28
00017a 01de      	MOVW R26,R28
00017b 9617      	ADIW R26,7
00017c e087      	LDI  R24,7
00017d 940e 0ceb 	CALL __COPYMML
00017f 01fe      	MOVW R30,R28
000180 9637      	ADIW R30,7
000181 e087      	LDI  R24,7
000182 962e      	ADIW R28,14
000183 9508      	RET
                 ; 0000 0086 }
                 ; .FEND
                 ;
                 ;void rtc_set(const rtc* a) {
                 ; 0000 0088 void rtc_set(const rtc* a) {
                 _rtc_set:
                 ; .FSTART _rtc_set
                 ; 0000 0089 	i2c_start();
000184 93ba      	ST   -Y,R27
000185 93aa      	ST   -Y,R26
                 ;	*a -> Y+0
000186 940e 0855 	CALL SUBOPT_0x0
                 ; 0000 008A 
                 ; 0000 008B 	i2c_write(D_WRITE);
                 ; 0000 008C 	i2c_write(D_SEC);
000188 e0a0      	LDI  R26,LOW(0)
000189 940e 0a29 	CALL _i2c_write
                 ; 0000 008D 
                 ; 0000 008E 	i2c_write(byte_to_bcd(a->sec));
00018b 81a8      	LD   R26,Y
00018c 81b9      	LDD  R27,Y+1
00018d 91ac      	LD   R26,X
00018e 940e 0864 	CALL SUBOPT_0x3
                 ; 0000 008F 	i2c_write(byte_to_bcd(a->min));
000190 81a1      	LDD  R26,Z+1
000191 940e 0864 	CALL SUBOPT_0x3
                 ; 0000 0090 	i2c_write(byte_to_bcd(a->hour));
000193 81a2      	LDD  R26,Z+2
000194 940e 0864 	CALL SUBOPT_0x3
                 ; 0000 0091 	i2c_write(byte_to_bcd(a->weekDay));
000196 81a3      	LDD  R26,Z+3
000197 940e 0864 	CALL SUBOPT_0x3
                 ; 0000 0092 	i2c_write(byte_to_bcd(a->date));
000199 81a4      	LDD  R26,Z+4
00019a 940e 0864 	CALL SUBOPT_0x3
                 ; 0000 0093 	i2c_write(byte_to_bcd(a->month));
00019c 81a5      	LDD  R26,Z+5
00019d 940e 0864 	CALL SUBOPT_0x3
                 ; 0000 0094 	i2c_write(byte_to_bcd(a->year));
00019f 81a6      	LDD  R26,Z+6
0001a0 df97      	RCALL _byte_to_bcd
0001a1 2fae      	MOV  R26,R30
0001a2 940e 085a 	CALL SUBOPT_0x1
                 ; 0000 0095 
                 ; 0000 0096 	i2c_stop();
                 ; 0000 0097 }
0001a4 940c 0384 	JMP  _0x20C0008
                 ; .FEND
                 ;
                 ;unsigned char read() {
                 ; 0000 0099 unsigned char read() {
                 _read:
                 ; .FSTART _read
                 ; 0000 009A 	const unsigned char map[] = {10,0,11,12,1,2,3,13,4,5,6,14,7,8,9,15};
                 ; 0000 009B 	unsigned char r, c;
                 ; 0000 009C 	PORTD |= 0x0F;
0001a6 9760      	SBIW R28,16
0001a7 e180      	LDI  R24,16
0001a8 e0a0      	LDI  R26,LOW(0)
0001a9 e0b0      	LDI  R27,HIGH(0)
0001aa e5ea      	LDI  R30,LOW(_0x15*2)
0001ab e0f0      	LDI  R31,HIGH(_0x15*2)
0001ac 940e 0d07 	CALL __INITLOCB
0001ae 931a      	ST   -Y,R17
0001af 930a      	ST   -Y,R16
                 ;	map -> Y+2
                 ;	r -> R17
                 ;	c -> R16
0001b0 b3e2      	IN   R30,0x12
0001b1 60ef      	ORI  R30,LOW(0xF)
0001b2 bbe2      	OUT  0x12,R30
                 ; 0000 009D 	for(c=0;c<4;c++){
0001b3 e000      	LDI  R16,LOW(0)
                 _0x17:
0001b4 3004      	CPI  R16,4
0001b5 f528      	BRSH _0x18
                 ; 0000 009E 		DDRD = 0x00;
0001b6 e0e0      	LDI  R30,LOW(0)
0001b7 bbe1      	OUT  0x11,R30
                 ; 0000 009F 		DDRD |= 0x80 >> c;
0001b8 b211      	IN   R1,17
0001b9 2fe0      	MOV  R30,R16
0001ba e8a0      	LDI  R26,LOW(128)
0001bb 940e 0c09 	CALL __LSRB12
0001bd 29e1      	OR   R30,R1
0001be bbe1      	OUT  0x11,R30
                 ; 0000 00A0 		for(r=0;r<4;r++){
0001bf e010      	LDI  R17,LOW(0)
                 _0x1A:
0001c0 3014      	CPI  R17,4
0001c1 f4b8      	BRSH _0x1B
                 ; 0000 00A1 			if(!(PIND & (0x08 >> r))) {
0001c2 b210      	IN   R1,16
0001c3 2fe1      	MOV  R30,R17
0001c4 e0a8      	LDI  R26,LOW(8)
0001c5 940e 0c09 	CALL __LSRB12
0001c7 21e1      	AND  R30,R1
0001c8 f471      	BRNE _0x1C
                 ; 0000 00A2 				return map[r*4+c];
0001c9 e0e4      	LDI  R30,LOW(4)
0001ca 9fe1      	MUL  R30,R17
0001cb 01f0      	MOVW R30,R0
0001cc 01df      	MOVW R26,R30
0001cd 2fe0      	MOV  R30,R16
0001ce e0f0      	LDI  R31,0
0001cf 0fea      	ADD  R30,R26
0001d0 1ffb      	ADC  R31,R27
0001d1 01de      	MOVW R26,R28
0001d2 9612      	ADIW R26,2
0001d3 0fae      	ADD  R26,R30
0001d4 1fbf      	ADC  R27,R31
0001d5 91ec      	LD   R30,X
0001d6 c005      	RJMP _0x20C0009
                 ; 0000 00A3 			}
                 ; 0000 00A4 		}
                 _0x1C:
0001d7 5f1f      	SUBI R17,-1
0001d8 cfe7      	RJMP _0x1A
                 _0x1B:
                 ; 0000 00A5 	}
0001d9 5f0f      	SUBI R16,-1
0001da cfd9      	RJMP _0x17
                 _0x18:
                 ; 0000 00A6 	return 0xFF;
0001db efef      	LDI  R30,LOW(255)
                 _0x20C0009:
0001dc 8119      	LDD  R17,Y+1
0001dd 8108      	LDD  R16,Y+0
0001de 9662      	ADIW R28,18
0001df 9508      	RET
                 ; 0000 00A7 }
                 ; .FEND
                 ;
                 ;
                 ;void write_line(unsigned char line, const char* str) {
                 ; 0000 00AA void write_line(unsigned char line, const char* str) {
                 _write_line:
                 ; .FSTART _write_line
                 ; 0000 00AB 	lcd_gotoxy(0,line);
0001e0 93ba      	ST   -Y,R27
0001e1 93aa      	ST   -Y,R26
                 ;	line -> Y+2
                 ;	*str -> Y+0
0001e2 e0e0      	LDI  R30,LOW(0)
0001e3 93ea      	ST   -Y,R30
0001e4 81ab      	LDD  R26,Y+3
0001e5 940e 0379 	CALL _lcd_gotoxy
                 ; 0000 00AC 	lcd_puts("                ");
                +
0001e7 e6a0     +LDI R26 , LOW ( _0x1D + ( 0 ) )
0001e8 e0b1     +LDI R27 , HIGH ( _0x1D + ( 0 ) )
                 	__POINTW2MN _0x1D,0
0001e9 940e 086c 	CALL SUBOPT_0x4
                 ; 0000 00AD 	lcd_gotoxy(0,line);
0001eb 81ab      	LDD  R26,Y+3
0001ec 940e 0379 	CALL _lcd_gotoxy
                 ; 0000 00AE 	lcd_puts(str);
0001ee 81a8      	LD   R26,Y
0001ef 81b9      	LDD  R27,Y+1
0001f0 940e 03a7 	CALL _lcd_puts
                 ; 0000 00AF }
0001f2 940c 03b6 	JMP  _0x20C0007
                 ; .FEND
                 
                 	.DSEG
                 _0x1D:
000160           	.BYTE 0x11
                 ;
                 ;
                 ;void timer_init() {
                 ; 0000 00B2 void timer_init() {
                 
                 	.CSEG
                 _timer_init:
                 ; .FSTART _timer_init
                 ; 0000 00B3 	TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0001f4 e0e0      	LDI  R30,LOW(0)
0001f5 bdef      	OUT  0x2F,R30
                 ; 0000 00B4 	TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
0001f6 e0e1      	LDI  R30,LOW(1)
0001f7 bdee      	OUT  0x2E,R30
                 ; 0000 00B5 	TCNT1H=0xE0;
0001f8 eee0      	LDI  R30,LOW(224)
0001f9 bded      	OUT  0x2D,R30
                 ; 0000 00B6 	TCNT1L=0xC0;
0001fa ece0      	LDI  R30,LOW(192)
0001fb bdec      	OUT  0x2C,R30
                 ; 0000 00B7 	ICR1H=0x00;
0001fc e0e0      	LDI  R30,LOW(0)
0001fd bde7      	OUT  0x27,R30
                 ; 0000 00B8 	ICR1L=0x00;
0001fe bde6      	OUT  0x26,R30
                 ; 0000 00B9 	OCR1AH=0x00;
0001ff bdeb      	OUT  0x2B,R30
                 ; 0000 00BA 	OCR1AL=0x00;
000200 bdea      	OUT  0x2A,R30
                 ; 0000 00BB 	OCR1BH=0x00;
000201 bde9      	OUT  0x29,R30
                 ; 0000 00BC 	OCR1BL=0x00;
000202 bde8      	OUT  0x28,R30
                 ; 0000 00BD 	TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000203 e0e4      	LDI  R30,LOW(4)
000204 bfe9      	OUT  0x39,R30
                 ; 0000 00BE }
000205 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void) {
                 ; 0000 00C2 interrupt [9] void timer1_ovf_isr(void) {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
000206 936a      	ST   -Y,R22
000207 937a      	ST   -Y,R23
000208 93aa      	ST   -Y,R26
000209 93ba      	ST   -Y,R27
00020a 93ea      	ST   -Y,R30
00020b 93fa      	ST   -Y,R31
00020c b7ef      	IN   R30,SREG
00020d 93ea      	ST   -Y,R30
                 ; 0000 00C3 	TCNT1H=0xE0C0 >> 8;
00020e eee0      	LDI  R30,LOW(224)
00020f bded      	OUT  0x2D,R30
                 ; 0000 00C4 	TCNT1L=0xE0C0 & 0xff;
000210 ece0      	LDI  R30,LOW(192)
000211 bdec      	OUT  0x2C,R30
                 ; 0000 00C5 
                 ; 0000 00C6 	millis++;
000212 eaa3      	LDI  R26,LOW(_millis)
000213 e0b1      	LDI  R27,HIGH(_millis)
000214 940e 0cbb 	CALL __GETD1P_INC
                +
000216 5fef     +SUBI R30 , LOW ( - 1 )
000217 4fff     +SBCI R31 , HIGH ( - 1 )
000218 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000219 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00021a 940e 0cc0 	CALL __PUTDP1_DEC
                 ; 0000 00C7 }
00021c 91e9      	LD   R30,Y+
00021d bfef      	OUT  SREG,R30
00021e 91f9      	LD   R31,Y+
00021f 91e9      	LD   R30,Y+
000220 91b9      	LD   R27,Y+
000221 91a9      	LD   R26,Y+
000222 9179      	LD   R23,Y+
000223 9169      	LD   R22,Y+
000224 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void) {
                 ; 0000 00C9 void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 00CA 	rtc now = {0,0,0,0,0,0,0};
                 ; 0000 00CB 	unsigned char current = 0;
                 ; 0000 00CC 	bit flag = 0;
                 ; 0000 00CD 
                 ; 0000 00CE 	lcd_init(16);
000225 9727      	SBIW R28,7
000226 940e 0871 	CALL SUBOPT_0x5
000228 e0e0      	LDI  R30,LOW(0)
000229 83ea      	STD  Y+2,R30
00022a 83eb      	STD  Y+3,R30
00022b 83ec      	STD  Y+4,R30
00022c 83ed      	STD  Y+5,R30
00022d 83ee      	STD  Y+6,R30
                 ;	now -> Y+0
                 ;	current -> R17
                 ;	flag -> R15.0
00022e 24ff      	CLR  R15
00022f e010      	LDI  R17,0
000230 e1a0      	LDI  R26,LOW(16)
000231 940e 03b8 	CALL _lcd_init
                 ; 0000 00CF 	i2c_init();
000233 940e 09f0 	CALL _i2c_init
                 ; 0000 00D0 	rtc_init();
000235 df15      	RCALL _rtc_init
                 ; 0000 00D1 	timer_init();
000236 dfbd      	RCALL _timer_init
                 ; 0000 00D2 
                 ; 0000 00D3 
                 ; 0000 00D4 	#asm("sei")
000237 9478      	sei
                 ; 0000 00D5 
                 ; 0000 00D6 
                 ; 0000 00D7 	while (1) {
                 _0x1E:
                 ; 0000 00D8 		DIS(0);
000238 2055      	TST  R5
000239 f411      	BRNE _0x22
00023a fc20      	SBRC R2,0
00023b c001      	RJMP _0x23
                 _0x22:
00023c c00c      	RJMP _0x21
                 _0x23:
                 ; 0000 00D9 		write_line(0,"Aryan Say Hello!");
00023d e0e0      	LDI  R30,LOW(0)
00023e 93ea      	ST   -Y,R30
                +
00023f e7a1     +LDI R26 , LOW ( _0x24 + ( 0 ) )
000240 e0b1     +LDI R27 , HIGH ( _0x24 + ( 0 ) )
                 	__POINTW2MN _0x24,0
000241 df9e      	RCALL _write_line
                 ; 0000 00DA 		write_line(1, "Press [ON]");
000242 e0e1      	LDI  R30,LOW(1)
000243 93ea      	ST   -Y,R30
                +
000244 e8a2     +LDI R26 , LOW ( _0x24 + ( 17 ) )
000245 e0b1     +LDI R27 , HIGH ( _0x24 + ( 17 ) )
                 	__POINTW2MN _0x24,17
000246 df99      	RCALL _write_line
                 ; 0000 00DB 		SID();
000247 94e8      	CLT
000248 f820      	BLD  R2,0
                 _0x21:
                 ; 0000 00DC 
                 ; 0000 00DD 
                 ; 0000 00DE 		DIS(1);
000249 e0e1      	LDI  R30,LOW(1)
00024a 15e5      	CP   R30,R5
00024b f411      	BRNE _0x26
00024c fc20      	SBRC R2,0
00024d c001      	RJMP _0x27
                 _0x26:
00024e c00e      	RJMP _0x25
                 _0x27:
                 ; 0000 00DF 		lcd_gotoxy(0,0);
00024f 940e 0875 	CALL SUBOPT_0x6
                 ; 0000 00E0 		sprintf(buffer, "%02d:%02d:%02d        ",now.hour, now.min, now.sec);
                 ; 0000 00E1 		lcd_puts(buffer);
000251 e9a3      	LDI  R26,LOW(_buffer)
000252 e0b1      	LDI  R27,HIGH(_buffer)
000253 940e 086c 	CALL SUBOPT_0x4
                 ; 0000 00E2 		lcd_gotoxy(0,1);
000255 e0a1      	LDI  R26,LOW(1)
000256 d122      	RCALL _lcd_gotoxy
                 ; 0000 00E3 		lcd_puts("20");
                +
000257 e8ad     +LDI R26 , LOW ( _0x24 + ( 28 ) )
000258 e0b1     +LDI R27 , HIGH ( _0x24 + ( 28 ) )
                 	__POINTW2MN _0x24,28
000259 940e 0899 	CALL SUBOPT_0x7
                 ; 0000 00E4 		sprintf(buffer, "%02d/%02d/%02d    ",now.year, now.month, now.date);
                 ; 0000 00E5 		lcd_puts(buffer);
00025b 940e 08ba 	CALL SUBOPT_0x8
                 ; 0000 00E6 		SID();
                 _0x25:
                 ; 0000 00E7 
                 ; 0000 00E8 		DIS(2);
00025d e0e2      	LDI  R30,LOW(2)
00025e 15e5      	CP   R30,R5
00025f f411      	BRNE _0x29
000260 fc20      	SBRC R2,0
000261 c001      	RJMP _0x2A
                 _0x29:
000262 c035      	RJMP _0x28
                 _0x2A:
                 ; 0000 00E9 		// 00:00:00
                 ; 0000 00EA 		lcd_gotoxy(0,0);
000263 940e 0875 	CALL SUBOPT_0x6
                 ; 0000 00EB 		sprintf(buffer, "%02d:%02d:%02d        ",now.hour, now.min, now.sec);
                 ; 0000 00EC 		if(current >= 0 && current < 3 && flag){
000265 3010      	CPI  R17,0
000266 f020      	BRLO _0x2C
000267 3013      	CPI  R17,3
000268 f410      	BRSH _0x2C
000269 fcf0      	SBRC R15,0
00026a c001      	RJMP _0x2D
                 _0x2C:
00026b c00d      	RJMP _0x2B
                 _0x2D:
                 ; 0000 00ED 			buffer[current*3] = ' ';
00026c e0e3      	LDI  R30,LOW(3)
00026d 9fe1      	MUL  R30,R17
00026e 01f0      	MOVW R30,R0
00026f 56ed      	SUBI R30,LOW(-_buffer)
000270 4ffe      	SBCI R31,HIGH(-_buffer)
000271 e2a0      	LDI  R26,LOW(32)
000272 83a0      	STD  Z+0,R26
                 ; 0000 00EE 			buffer[current*3+1] = ' ';
000273 e0e3      	LDI  R30,LOW(3)
000274 9fe1      	MUL  R30,R17
000275 01f0      	MOVW R30,R0
                +
000276 56ec     +SUBI R30 , LOW ( - _buffer - ( 1 ) )
000277 4ffe     +SBCI R31 , HIGH ( - _buffer - ( 1 ) )
                 	__ADDW1MN _buffer,1
000278 83a0      	STD  Z+0,R26
                 ; 0000 00EF 		}
                 ; 0000 00F0 		lcd_puts(buffer);
                 _0x2B:
000279 e9a3      	LDI  R26,LOW(_buffer)
00027a e0b1      	LDI  R27,HIGH(_buffer)
00027b 940e 086c 	CALL SUBOPT_0x4
                 ; 0000 00F1 		lcd_gotoxy(0,1);
00027d e0a1      	LDI  R26,LOW(1)
00027e d0fa      	RCALL _lcd_gotoxy
                 ; 0000 00F2 		lcd_puts("20");
                +
00027f e9a0     +LDI R26 , LOW ( _0x24 + ( 31 ) )
000280 e0b1     +LDI R27 , HIGH ( _0x24 + ( 31 ) )
                 	__POINTW2MN _0x24,31
000281 940e 0899 	CALL SUBOPT_0x7
                 ; 0000 00F3 		sprintf(buffer, "%02d/%02d/%02d    ",now.year, now.month, now.date);
                 ; 0000 00F4 		if(current >= 3 && current < 6 && flag){
000283 3013      	CPI  R17,3
000284 f020      	BRLO _0x2F
000285 3016      	CPI  R17,6
000286 f410      	BRSH _0x2F
000287 fcf0      	SBRC R15,0
000288 c001      	RJMP _0x30
                 _0x2F:
000289 c00c      	RJMP _0x2E
                 _0x30:
                 ; 0000 00F5 			buffer[(current-3)*3] = ' ';
00028a 940e 08c1 	CALL SUBOPT_0x9
00028c 56ed      	SUBI R30,LOW(-_buffer)
00028d 4ffe      	SBCI R31,HIGH(-_buffer)
00028e e2a0      	LDI  R26,LOW(32)
00028f 83a0      	STD  Z+0,R26
                 ; 0000 00F6 			buffer[(current-3)*3+1] = ' ';
000290 940e 08c1 	CALL SUBOPT_0x9
                +
000292 56ec     +SUBI R30 , LOW ( - _buffer - ( 1 ) )
000293 4ffe     +SBCI R31 , HIGH ( - _buffer - ( 1 ) )
                 	__ADDW1MN _buffer,1
000294 e2a0      	LDI  R26,LOW(32)
000295 83a0      	STD  Z+0,R26
                 ; 0000 00F7 		}
                 ; 0000 00F8 		lcd_puts(buffer);
                 _0x2E:
000296 940e 08ba 	CALL SUBOPT_0x8
                 ; 0000 00F9 		SID();
                 _0x28:
                 ; 0000 00FA 
                 ; 0000 00FB 		switch(page) {
000298 2de5      	MOV  R30,R5
000299 e0f0      	LDI  R31,0
                 ; 0000 00FC 			case 0:
00029a 9730      	SBIW R30,0
00029b f499      	BRNE _0x34
                 ; 0000 00FD 				KBD();
00029c 940e 08c9 	CALL SUBOPT_0xA
00029e f011      	BREQ _0x36
00029f 1474      	CP   R7,R4
0002a0 f409      	BRNE _0x37
                 _0x36:
0002a1 c008      	RJMP _0x35
                 _0x37:
                 ; 0000 00FE 				if(key == KEY_ON){
0002a2 e0ea      	LDI  R30,LOW(10)
0002a3 15e4      	CP   R30,R4
0002a4 f421      	BRNE _0x38
                 ; 0000 00FF 					GO(1);
0002a5 e0e1      	LDI  R30,LOW(1)
0002a6 2e5e      	MOV  R5,R30
0002a7 9468      	SET
0002a8 f820      	BLD  R2,0
                 ; 0000 0100 				}
                 ; 0000 0101 				DBK();
                 _0x38:
0002a9 2c74      	MOV  R7,R4
                 _0x35:
0002aa efef      	LDI  R30,LOW(255)
0002ab 15e4      	CP   R30,R4
0002ac f409      	BRNE _0x39
0002ad 2e7e      	MOV  R7,R30
                 ; 0000 0102 				break;
                 _0x39:
0002ae c0a8      	RJMP _0x33
                 ; 0000 0103 			case 1:
                 _0x34:
0002af 30e1      	CPI  R30,LOW(0x1)
0002b0 e0a0      	LDI  R26,HIGH(0x1)
0002b1 07fa      	CPC  R31,R26
0002b2 f519      	BRNE _0x3A
                 ; 0000 0104 				if(millis - last_time > 1000) {
0002b3 940e 08cf 	CALL SUBOPT_0xB
                +
0002b5 3ee9     +CPI R30 , LOW ( 0x3E9 )
0002b6 e0a3     +LDI R26 , HIGH ( 0x3E9 )
0002b7 07fa     +CPC R31 , R26
0002b8 e0a0     +LDI R26 , BYTE3 ( 0x3E9 )
0002b9 076a     +CPC R22 , R26
0002ba e0a0     +LDI R26 , BYTE4 ( 0x3E9 )
0002bb 077a     +CPC R23 , R26
                 	__CPD1N 0x3E9
0002bc f030      	BRLO _0x3B
                 ; 0000 0105 					now = rtc_get();
0002bd de96      	RCALL _rtc_get
0002be 01de      	MOVW R26,R28
0002bf 940e 0ceb 	CALL __COPYMML
                 ; 0000 0106 
                 ; 0000 0107 					last_time = millis;
0002c1 940e 08e2 	CALL SUBOPT_0xC
                 ; 0000 0108 					UP();
                 ; 0000 0109 				}
                 ; 0000 010A 				KBD();
                 _0x3B:
0002c3 940e 08c9 	CALL SUBOPT_0xA
0002c5 f011      	BREQ _0x3D
0002c6 1474      	CP   R7,R4
0002c7 f409      	BRNE _0x3E
                 _0x3D:
0002c8 c008      	RJMP _0x3C
                 _0x3E:
                 ; 0000 010B 				if(key == KEY_EQL){
0002c9 e0eb      	LDI  R30,LOW(11)
0002ca 15e4      	CP   R30,R4
0002cb f421      	BRNE _0x3F
                 ; 0000 010C 					GO(2);
0002cc e0e2      	LDI  R30,LOW(2)
0002cd 2e5e      	MOV  R5,R30
0002ce 9468      	SET
0002cf f820      	BLD  R2,0
                 ; 0000 010D 				}
                 ; 0000 010E 				DBK();
                 _0x3F:
0002d0 2c74      	MOV  R7,R4
                 _0x3C:
0002d1 efef      	LDI  R30,LOW(255)
0002d2 15e4      	CP   R30,R4
0002d3 f409      	BRNE _0x40
0002d4 2e7e      	MOV  R7,R30
                 ; 0000 010F 				break;
                 _0x40:
0002d5 c081      	RJMP _0x33
                 ; 0000 0110 			case 2:
                 _0x3A:
0002d6 30e2      	CPI  R30,LOW(0x2)
0002d7 e0a0      	LDI  R26,HIGH(0x2)
0002d8 07fa      	CPC  R31,R26
0002d9 f009      	BREQ PC+2
0002da c07c      	RJMP _0x33
                 ; 0000 0111 				if(millis - last_time > 20) {
0002db 940e 08cf 	CALL SUBOPT_0xB
                +
0002dd 31e5     +CPI R30 , LOW ( 0x15 )
0002de e0a0     +LDI R26 , HIGH ( 0x15 )
0002df 07fa     +CPC R31 , R26
0002e0 e0a0     +LDI R26 , BYTE3 ( 0x15 )
0002e1 076a     +CPC R22 , R26
0002e2 e0a0     +LDI R26 , BYTE4 ( 0x15 )
0002e3 077a     +CPC R23 , R26
                 	__CPD1N 0x15
0002e4 f020      	BRLO _0x42
                 ; 0000 0112 					flag = !flag;
0002e5 e0e1      	LDI  R30,LOW(1)
0002e6 26fe      	EOR  R15,R30
                 ; 0000 0113 					last_time = millis;
0002e7 940e 08e2 	CALL SUBOPT_0xC
                 ; 0000 0114 					UP();
                 ; 0000 0115 				}
                 ; 0000 0116 				KBD();
                 _0x42:
0002e9 940e 08c9 	CALL SUBOPT_0xA
0002eb f011      	BREQ _0x44
0002ec 1474      	CP   R7,R4
0002ed f409      	BRNE _0x45
                 _0x44:
0002ee c064      	RJMP _0x43
                 _0x45:
                 ; 0000 0117 				if(key == KEY_SUB && current > 0){
0002ef e0ed      	LDI  R30,LOW(13)
0002f0 15e4      	CP   R30,R4
0002f1 f411      	BRNE _0x47
0002f2 3011      	CPI  R17,1
0002f3 f408      	BRSH _0x48
                 _0x47:
0002f4 c004      	RJMP _0x46
                 _0x48:
                 ; 0000 0118 					current --;
0002f5 5011      	SUBI R17,1
                 ; 0000 0119 					UP();
0002f6 9468      	SET
0002f7 f820      	BLD  R2,0
                 ; 0000 011A 				}
                 ; 0000 011B 				else if(key == KEY_ADD && current < 5){
0002f8 c059      	RJMP _0x49
                 _0x46:
0002f9 e0ec      	LDI  R30,LOW(12)
0002fa 15e4      	CP   R30,R4
0002fb f411      	BRNE _0x4B
0002fc 3015      	CPI  R17,5
0002fd f008      	BRLO _0x4C
                 _0x4B:
0002fe c004      	RJMP _0x4A
                 _0x4C:
                 ; 0000 011C 					current ++;
0002ff 5f1f      	SUBI R17,-1
                 ; 0000 011D 					UP();
000300 9468      	SET
000301 f820      	BLD  R2,0
                 ; 0000 011E 				}else if(key == KEY_EQL){
000302 c04f      	RJMP _0x4D
                 _0x4A:
000303 e0eb      	LDI  R30,LOW(11)
000304 15e4      	CP   R30,R4
000305 f439      	BRNE _0x4E
                 ; 0000 011F 					rtc_set(&now);
000306 01de      	MOVW R26,R28
000307 de7c      	RCALL _rtc_set
                 ; 0000 0120 					GO(1);
000308 e0e1      	LDI  R30,LOW(1)
000309 2e5e      	MOV  R5,R30
00030a 9468      	SET
00030b f820      	BLD  R2,0
                 ; 0000 0121 				}else if (key >= 0 && key <= 9){
00030c c045      	RJMP _0x4F
                 _0x4E:
00030d e0e0      	LDI  R30,LOW(0)
00030e 164e      	CP   R4,R30
00030f f018      	BRLO _0x51
000310 e0e9      	LDI  R30,LOW(9)
000311 15e4      	CP   R30,R4
000312 f408      	BRSH _0x52
                 _0x51:
000313 c03e      	RJMP _0x50
                 _0x52:
                 ; 0000 0122 					unsigned char nw = get(&now, current);
                 ; 0000 0123 					unsigned char temp = 0;
                 ; 0000 0124 					if(nw > 9) nw =0;
000314 9722      	SBIW R28,2
000315 e0e0      	LDI  R30,LOW(0)
000316 83e8      	ST   Y,R30
                 ;	now -> Y+2
                 ;	flag -> R15.0
                 ;	nw -> Y+1
                 ;	temp -> Y+0
000317 01fe      	MOVW R30,R28
000318 9632      	ADIW R30,2
000319 93fa      	ST   -Y,R31
00031a 93ea      	ST   -Y,R30
00031b 2fa1      	MOV  R26,R17
00031c ddd5      	RCALL _get
00031d 83e9      	STD  Y+1,R30
00031e 81a9      	LDD  R26,Y+1
00031f 30aa      	CPI  R26,LOW(0xA)
000320 f010      	BRLO _0x53
000321 e0e0      	LDI  R30,LOW(0)
000322 83e9      	STD  Y+1,R30
                 ; 0000 0125 					temp = nw * 10 + key;
                 _0x53:
000323 81e9      	LDD  R30,Y+1
000324 e0aa      	LDI  R26,LOW(10)
000325 02ea      	MULS R30,R26
000326 01f0      	MOVW R30,R0
000327 0de4      	ADD  R30,R4
000328 83e8      	ST   Y,R30
                 ; 0000 0126 
                 ; 0000 0127 					if((current == 0 && temp > 24) || (current == 1 && temp > 60) || (current == 2 && temp > 60) || (current == 3 && te ...
000329 3010      	CPI  R17,0
00032a f419      	BRNE _0x55
00032b 81a8      	LD   R26,Y
00032c 31a9      	CPI  R26,LOW(0x19)
00032d f4d0      	BRSH _0x57
                 _0x55:
00032e 3011      	CPI  R17,1
00032f f419      	BRNE _0x58
000330 81a8      	LD   R26,Y
000331 33ad      	CPI  R26,LOW(0x3D)
000332 f4a8      	BRSH _0x57
                 _0x58:
000333 3012      	CPI  R17,2
000334 f419      	BRNE _0x5A
000335 81a8      	LD   R26,Y
000336 33ad      	CPI  R26,LOW(0x3D)
000337 f480      	BRSH _0x57
                 _0x5A:
000338 3013      	CPI  R17,3
000339 f419      	BRNE _0x5C
00033a 81a8      	LD   R26,Y
00033b 36a4      	CPI  R26,LOW(0x64)
00033c f458      	BRSH _0x57
                 _0x5C:
00033d 3014      	CPI  R17,4
00033e f419      	BRNE _0x5E
00033f 81a8      	LD   R26,Y
000340 30ad      	CPI  R26,LOW(0xD)
000341 f430      	BRSH _0x57
                 _0x5E:
000342 3015      	CPI  R17,5
000343 f419      	BRNE _0x60
000344 81a8      	LD   R26,Y
000345 32a0      	CPI  R26,LOW(0x20)
000346 f408      	BRSH _0x57
                 _0x60:
000347 c002      	RJMP _0x54
                 _0x57:
                 ; 0000 0128 						temp = 0;
000348 e0e0      	LDI  R30,LOW(0)
000349 83e8      	ST   Y,R30
                 ; 0000 0129 
                 ; 0000 012A 					set(&now, current,  temp);
                 _0x54:
00034a 01fe      	MOVW R30,R28
00034b 9632      	ADIW R30,2
00034c 93fa      	ST   -Y,R31
00034d 93ea      	ST   -Y,R30
00034e 931a      	ST   -Y,R17
00034f 81ab      	LDD  R26,Y+3
000350 dd64      	RCALL _set
                 ; 0000 012B 				}
000351 9622      	ADIW R28,2
                 ; 0000 012C 
                 ; 0000 012D 				DBK();
                 _0x50:
                 _0x4F:
                 _0x4D:
                 _0x49:
000352 2c74      	MOV  R7,R4
                 _0x43:
000353 efef      	LDI  R30,LOW(255)
000354 15e4      	CP   R30,R4
000355 f409      	BRNE _0x63
000356 2e7e      	MOV  R7,R30
                 ; 0000 012E 				break;
                 _0x63:
                 ; 0000 012F 		}
                 _0x33:
                 ; 0000 0130 	}
000357 cee0      	RJMP _0x1E
                 ; 0000 0131 }
                 _0x64:
000358 cfff      	RJMP _0x64
                 ; .FEND
                 
                 	.DSEG
                 _0x24:
000171           	.BYTE 0x22
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000359 93aa      	ST   -Y,R26
00035a b3e5      	IN   R30,0x15
00035b 70ef      	ANDI R30,LOW(0xF)
00035c 2fae      	MOV  R26,R30
00035d 81e8      	LD   R30,Y
00035e 7fe0      	ANDI R30,LOW(0xF0)
00035f 2bea      	OR   R30,R26
000360 bbe5      	OUT  0x15,R30
                +
000361 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000362 958a     +DEC R24
000363 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000364 9aaa      	SBI  0x15,2
                +
000365 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000366 958a     +DEC R24
000367 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000368 98aa      	CBI  0x15,2
                +
000369 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00036a 958a     +DEC R24
00036b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00036c c077      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00036d 93aa      	ST   -Y,R26
00036e 81a8      	LD   R26,Y
00036f dfe9      	RCALL __lcd_write_nibble_G100
000370 81e8          ld    r30,y
000371 95e2          swap  r30
000372 83e8          st    y,r30
000373 81a8      	LD   R26,Y
000374 dfe4      	RCALL __lcd_write_nibble_G100
                +
000375 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000376 958a     +DEC R24
000377 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000378 c06b      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000379 93aa      	ST   -Y,R26
00037a 81e8      	LD   R30,Y
00037b e0f0      	LDI  R31,0
00037c 55e5      	SUBI R30,LOW(-__base_y_G100)
00037d 4ffe      	SBCI R31,HIGH(-__base_y_G100)
00037e 81e0      	LD   R30,Z
00037f 81a9      	LDD  R26,Y+1
000380 0fae      	ADD  R26,R30
000381 dfeb      	RCALL __lcd_write_data
000382 8069      	LDD  R6,Y+1
000383 8098      	LDD  R9,Y+0
                 _0x20C0008:
000384 9622      	ADIW R28,2
000385 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000386 e0a2      	LDI  R26,LOW(2)
000387 940e 08f5 	CALL SUBOPT_0xD
000389 e0ac      	LDI  R26,LOW(12)
00038a dfe2      	RCALL __lcd_write_data
00038b e0a1      	LDI  R26,LOW(1)
00038c 940e 08f5 	CALL SUBOPT_0xD
00038e e0e0      	LDI  R30,LOW(0)
00038f 2e9e      	MOV  R9,R30
000390 2e6e      	MOV  R6,R30
000391 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000392 93aa      	ST   -Y,R26
000393 81a8      	LD   R26,Y
000394 30aa      	CPI  R26,LOW(0xA)
000395 f011      	BREQ _0x2000005
000396 1468      	CP   R6,R8
000397 f048      	BRLO _0x2000004
                 _0x2000005:
000398 e0e0      	LDI  R30,LOW(0)
000399 93ea      	ST   -Y,R30
00039a 9493      	INC  R9
00039b 2da9      	MOV  R26,R9
00039c dfdc      	RCALL _lcd_gotoxy
00039d 81a8      	LD   R26,Y
00039e 30aa      	CPI  R26,LOW(0xA)
00039f f409      	BRNE _0x2000007
0003a0 c043      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
0003a1 9463      	INC  R6
0003a2 9aa8      	SBI  0x15,0
0003a3 81a8      	LD   R26,Y
0003a4 dfc8      	RCALL __lcd_write_data
0003a5 98a8      	CBI  0x15,0
0003a6 c03d      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0003a7 93ba      	ST   -Y,R27
0003a8 93aa      	ST   -Y,R26
0003a9 931a      	ST   -Y,R17
                 _0x2000008:
0003aa 81a9      	LDD  R26,Y+1
0003ab 81ba      	LDD  R27,Y+1+1
0003ac 91ed      	LD   R30,X+
0003ad 83a9      	STD  Y+1,R26
0003ae 83ba      	STD  Y+1+1,R27
0003af 2f1e      	MOV  R17,R30
0003b0 30e0      	CPI  R30,0
0003b1 f019      	BREQ _0x200000A
0003b2 2fa1      	MOV  R26,R17
0003b3 dfde      	RCALL _lcd_putchar
0003b4 cff5      	RJMP _0x2000008
                 _0x200000A:
0003b5 8118      	LDD  R17,Y+0
                 _0x20C0007:
0003b6 9623      	ADIW R28,3
0003b7 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0003b8 93aa      	ST   -Y,R26
0003b9 b3e4      	IN   R30,0x14
0003ba 6fe0      	ORI  R30,LOW(0xF0)
0003bb bbe4      	OUT  0x14,R30
0003bc 9aa2      	SBI  0x14,2
0003bd 9aa0      	SBI  0x14,0
0003be 9aa1      	SBI  0x14,1
0003bf 98aa      	CBI  0x15,2
0003c0 98a8      	CBI  0x15,0
0003c1 98a9      	CBI  0x15,1
0003c2 8088      	LDD  R8,Y+0
0003c3 81e8      	LD   R30,Y
0003c4 58e0      	SUBI R30,-LOW(128)
                +
0003c5 93e0 01ad+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0003c7 81e8      	LD   R30,Y
0003c8 54e0      	SUBI R30,-LOW(192)
                +
0003c9 93e0 01ae+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0003cb e1a4      	LDI  R26,LOW(20)
0003cc e0b0      	LDI  R27,0
0003cd 940e 0a41 	CALL _delay_ms
0003cf 940e 08fb 	CALL SUBOPT_0xE
0003d1 940e 08fb 	CALL SUBOPT_0xE
0003d3 940e 08fb 	CALL SUBOPT_0xE
0003d5 e2a0      	LDI  R26,LOW(32)
0003d6 df82      	RCALL __lcd_write_nibble_G100
                +
0003d7 ec88     +LDI R24 , LOW ( 200 )
0003d8 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0003d9 9701     +SBIW R24 , 1
0003da f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0003db e2a8      	LDI  R26,LOW(40)
0003dc df90      	RCALL __lcd_write_data
0003dd e0a4      	LDI  R26,LOW(4)
0003de df8e      	RCALL __lcd_write_data
0003df e8a5      	LDI  R26,LOW(133)
0003e0 df8c      	RCALL __lcd_write_data
0003e1 e0a6      	LDI  R26,LOW(6)
0003e2 df8a      	RCALL __lcd_write_data
0003e3 dfa2      	RCALL _lcd_clear
                 _0x20C0006:
0003e4 9621      	ADIW R28,1
0003e5 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0003e6 93ba      	ST   -Y,R27
0003e7 93aa      	ST   -Y,R26
0003e8 931a      	ST   -Y,R17
0003e9 930a      	ST   -Y,R16
0003ea 81aa      	LDD  R26,Y+2
0003eb 81bb      	LDD  R27,Y+2+1
0003ec 9612      	ADIW R26,2
0003ed 940e 0cb1 	CALL __GETW1P
0003ef 9730      	SBIW R30,0
0003f0 f129      	BREQ _0x2020010
0003f1 81aa      	LDD  R26,Y+2
0003f2 81bb      	LDD  R27,Y+2+1
0003f3 9614      	ADIW R26,4
0003f4 940e 0cb1 	CALL __GETW1P
0003f6 018f      	MOVW R16,R30
0003f7 9730      	SBIW R30,0
0003f8 f061      	BREQ _0x2020012
                +
0003f9 3002     +CPI R16 , LOW ( 2 )
0003fa e0e0     +LDI R30 , HIGH ( 2 )
0003fb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0003fc f080      	BRLO _0x2020013
0003fd 01f8      	MOVW R30,R16
0003fe 9731      	SBIW R30,1
0003ff 018f      	MOVW R16,R30
                +
000400 81aa     +LDD R26 , Y + 2
000401 81bb     +LDD R27 , Y + 2 + 1
000402 9614     +ADIW R26 , 4
000403 93ed     +ST X + , R30
000404 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000405 81aa      	LDD  R26,Y+2
000406 81bb      	LDD  R27,Y+2+1
000407 9612      	ADIW R26,2
000408 940e 0903 	CALL SUBOPT_0xF
00040a 9731      	SBIW R30,1
00040b 81ac      	LDD  R26,Y+4
00040c 83a0      	STD  Z+0,R26
                 _0x2020013:
00040d 81aa      	LDD  R26,Y+2
00040e 81bb      	LDD  R27,Y+2+1
00040f 940e 0cb1 	CALL __GETW1P
000411 23ff      	TST  R31
000412 f012      	BRMI _0x2020014
000413 940e 0903 	CALL SUBOPT_0xF
                 _0x2020014:
000415 c006      	RJMP _0x2020015
                 _0x2020010:
000416 81aa      	LDD  R26,Y+2
000417 81bb      	LDD  R27,Y+2+1
000418 efef      	LDI  R30,LOW(65535)
000419 efff      	LDI  R31,HIGH(65535)
00041a 93ed      	ST   X+,R30
00041b 93fc      	ST   X,R31
                 _0x2020015:
00041c 8119      	LDD  R17,Y+1
00041d 8108      	LDD  R16,Y+0
00041e 9625      	ADIW R28,5
00041f 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
000420 93ba      	ST   -Y,R27
000421 93aa      	ST   -Y,R26
000422 9724      	SBIW R28,4
000423 940e 0871 	CALL SUBOPT_0x5
000425 e8e0      	LDI  R30,LOW(128)
000426 83ea      	STD  Y+2,R30
000427 e3ef      	LDI  R30,LOW(63)
000428 83eb      	STD  Y+3,R30
000429 940e 0cfb 	CALL __SAVELOCR4
00042b 85ee      	LDD  R30,Y+14
00042c 85ff      	LDD  R31,Y+14+1
00042d 3fef      	CPI  R30,LOW(0xFFFF)
00042e efaf      	LDI  R26,HIGH(0xFFFF)
00042f 07fa      	CPC  R31,R26
000430 f449      	BRNE _0x2020019
000431 85e8      	LDD  R30,Y+8
000432 85f9      	LDD  R31,Y+8+1
000433 93fa      	ST   -Y,R31
000434 93ea      	ST   -Y,R30
                +
000435 eca6     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
000436 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
000437 940e 0743 	CALL _strcpyf
000439 c0b7      	RJMP _0x20C0005
                 _0x2020019:
00043a 3fef      	CPI  R30,LOW(0x7FFF)
00043b e7af      	LDI  R26,HIGH(0x7FFF)
00043c 07fa      	CPC  R31,R26
00043d f449      	BRNE _0x2020018
00043e 85e8      	LDD  R30,Y+8
00043f 85f9      	LDD  R31,Y+8+1
000440 93fa      	ST   -Y,R31
000441 93ea      	ST   -Y,R30
                +
000442 eca7     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
000443 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
000444 940e 0743 	CALL _strcpyf
000446 c0aa      	RJMP _0x20C0005
                 _0x2020018:
000447 85ab      	LDD  R26,Y+11
000448 30a7      	CPI  R26,LOW(0x7)
000449 f010      	BRLO _0x202001B
00044a e0e6      	LDI  R30,LOW(6)
00044b 87eb      	STD  Y+11,R30
                 _0x202001B:
00044c 851b      	LDD  R17,Y+11
                 _0x202001C:
00044d 2fe1      	MOV  R30,R17
00044e 5011      	SUBI R17,1
00044f 30e0      	CPI  R30,0
000450 f019      	BREQ _0x202001E
000451 940e 0909 	CALL SUBOPT_0x10
000453 cff9      	RJMP _0x202001C
                 _0x202001E:
                +
000454 85ec     +LDD R30 , Y + 12
000455 85fd     +LDD R31 , Y + 12 + 1
000456 856e     +LDD R22 , Y + 12 + 2
000457 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000458 940e 0cf5 	CALL __CPD10
00045a f421      	BRNE _0x202001F
00045b e030      	LDI  R19,LOW(0)
00045c 940e 0909 	CALL SUBOPT_0x10
00045e c02d      	RJMP _0x2020020
                 _0x202001F:
00045f 853b      	LDD  R19,Y+11
000460 940e 0918 	CALL SUBOPT_0x11
000462 f009      	BREQ PC+2
000463 f408      	BRCC PC+2
000464 c00b      	RJMP _0x2020021
000465 940e 0909 	CALL SUBOPT_0x10
                 _0x2020022:
000467 940e 0918 	CALL SUBOPT_0x11
000469 f028      	BRLO _0x2020024
00046a 940e 0923 	CALL SUBOPT_0x12
00046c 940e 0928 	CALL SUBOPT_0x13
00046e cff8      	RJMP _0x2020022
                 _0x2020024:
00046f c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
000470 940e 0918 	CALL SUBOPT_0x11
000472 f440      	BRSH _0x2020028
000473 940e 0923 	CALL SUBOPT_0x12
000475 940e 0934 	CALL SUBOPT_0x14
000477 940e 093b 	CALL SUBOPT_0x15
000479 5031      	SUBI R19,LOW(1)
00047a cff5      	RJMP _0x2020026
                 _0x2020028:
00047b 940e 0909 	CALL SUBOPT_0x10
                 _0x2020025:
                +
00047d 85ec     +LDD R30 , Y + 12
00047e 85fd     +LDD R31 , Y + 12 + 1
00047f 856e     +LDD R22 , Y + 12 + 2
000480 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000481 940e 0940 	CALL SUBOPT_0x16
000483 940e 093b 	CALL SUBOPT_0x15
000485 940e 0918 	CALL SUBOPT_0x11
000487 f020      	BRLO _0x2020029
000488 940e 0923 	CALL SUBOPT_0x12
00048a 940e 0928 	CALL SUBOPT_0x13
                 _0x2020029:
                 _0x2020020:
00048c e010      	LDI  R17,LOW(0)
                 _0x202002A:
00048d 85eb      	LDD  R30,Y+11
00048e 17e1      	CP   R30,R17
00048f f1a8      	BRLO _0x202002C
                +
000490 81ac     +LDD R26 , Y + 4
000491 81bd     +LDD R27 , Y + 4 + 1
000492 818e     +LDD R24 , Y + 4 + 2
000493 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000494 940e 0947 	CALL SUBOPT_0x17
000496 940e 0940 	CALL SUBOPT_0x16
000498 01df      	MOVW R26,R30
000499 01cb      	MOVW R24,R22
00049a 940e 079a 	CALL _floor
                +
00049c 83ec     +STD Y + 4 , R30
00049d 83fd     +STD Y + 4 + 1 , R31
00049e 836e     +STD Y + 4 + 2 , R22
00049f 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0004a0 940e 0923 	CALL SUBOPT_0x12
0004a2 940e 0b8f 	CALL __DIVF21
0004a4 940e 0a7e 	CALL __CFD1U
0004a6 2f0e      	MOV  R16,R30
0004a7 940e 094e 	CALL SUBOPT_0x18
0004a9 940e 0955 	CALL SUBOPT_0x19
0004ab 27ff      	CLR  R31
0004ac 2766      	CLR  R22
0004ad 2777      	CLR  R23
0004ae 940e 0ab7 	CALL __CDF1
                +
0004b0 81ac     +LDD R26 , Y + 4
0004b1 81bd     +LDD R27 , Y + 4 + 1
0004b2 818e     +LDD R24 , Y + 4 + 2
0004b3 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0004b4 940e 0b41 	CALL __MULF12
0004b6 940e 0923 	CALL SUBOPT_0x12
0004b8 940e 095a 	CALL SUBOPT_0x1A
0004ba 940e 093b 	CALL SUBOPT_0x15
0004bc 2fe1      	MOV  R30,R17
0004bd 5f1f      	SUBI R17,-1
0004be 30e0      	CPI  R30,0
0004bf f669      	BRNE _0x202002A
0004c0 940e 094e 	CALL SUBOPT_0x18
0004c2 e2ee      	LDI  R30,LOW(46)
0004c3 93ec      	ST   X,R30
0004c4 cfc8      	RJMP _0x202002A
                 _0x202002C:
0004c5 940e 095f 	CALL SUBOPT_0x1B
0004c7 9731      	SBIW R30,1
0004c8 85aa      	LDD  R26,Y+10
0004c9 83a0      	STD  Z+0,R26
0004ca 3030      	CPI  R19,0
0004cb f42c      	BRGE _0x202002E
0004cc 9531      	NEG  R19
0004cd 85a8      	LDD  R26,Y+8
0004ce 85b9      	LDD  R27,Y+8+1
0004cf e2ed      	LDI  R30,LOW(45)
0004d0 c003      	RJMP _0x2020113
                 _0x202002E:
0004d1 85a8      	LDD  R26,Y+8
0004d2 85b9      	LDD  R27,Y+8+1
0004d3 e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
0004d4 93ec      	ST   X,R30
0004d5 940e 095f 	CALL SUBOPT_0x1B
0004d7 940e 095f 	CALL SUBOPT_0x1B
0004d9 9731      	SBIW R30,1
0004da 01bf      	MOVW R22,R30
0004db 2fa3      	MOV  R26,R19
0004dc e0ea      	LDI  R30,LOW(10)
0004dd 940e 0c37 	CALL __DIVB21
0004df 5de0      	SUBI R30,-LOW(48)
0004e0 01db      	MOVW R26,R22
0004e1 93ec      	ST   X,R30
0004e2 940e 095f 	CALL SUBOPT_0x1B
0004e4 9731      	SBIW R30,1
0004e5 01bf      	MOVW R22,R30
0004e6 2fa3      	MOV  R26,R19
0004e7 e0ea      	LDI  R30,LOW(10)
0004e8 940e 0c79 	CALL __MODB21
0004ea 5de0      	SUBI R30,-LOW(48)
0004eb 01db      	MOVW R26,R22
0004ec 93ec      	ST   X,R30
0004ed 85a8      	LDD  R26,Y+8
0004ee 85b9      	LDD  R27,Y+8+1
0004ef e0e0      	LDI  R30,LOW(0)
0004f0 93ec      	ST   X,R30
                 _0x20C0005:
0004f1 940e 0d02 	CALL __LOADLOCR4
0004f3 9660      	ADIW R28,16
0004f4 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0004f5 93ba      	ST   -Y,R27
0004f6 93aa      	ST   -Y,R26
0004f7 97ef      	SBIW R28,63
0004f8 9761      	SBIW R28,17
0004f9 940e 0cf9 	CALL __SAVELOCR6
0004fb e010      	LDI  R17,0
                +
0004fc 01fe     +MOVW R30 , R28
0004fd 5ae8     +SUBI R30 , LOW ( - 88 )
0004fe 4fff     +SBCI R31 , HIGH ( - 88 )
0004ff 9001     +LD R0 , Z +
000500 81f0     +LD R31 , Z
000501 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000502 87e8      	STD  Y+8,R30
000503 87f9      	STD  Y+8+1,R31
                +
000504 01fe     +MOVW R30 , R28
000505 5aea     +SUBI R30 , LOW ( - 86 )
000506 4fff     +SBCI R31 , HIGH ( - 86 )
000507 9001     +LD R0 , Z +
000508 81f0     +LD R31 , Z
000509 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00050a 83ee      	STD  Y+6,R30
00050b 83ff      	STD  Y+6+1,R31
00050c 81ae      	LDD  R26,Y+6
00050d 81bf      	LDD  R27,Y+6+1
00050e e0e0      	LDI  R30,LOW(0)
00050f e0f0      	LDI  R31,HIGH(0)
000510 93ed      	ST   X+,R30
000511 93fc      	ST   X,R31
                 _0x2020030:
000512 01de      	MOVW R26,R28
000513 5aa4      	SUBI R26,LOW(-(92))
000514 4fbf      	SBCI R27,HIGH(-(92))
000515 940e 0903 	CALL SUBOPT_0xF
000517 9731      	SBIW R30,1
000518 91e4      	LPM  R30,Z
000519 2f2e      	MOV  R18,R30
00051a 30e0      	CPI  R30,0
00051b f409      	BRNE PC+2
00051c c1e9      	RJMP _0x2020032
00051d 2fe1      	MOV  R30,R17
00051e 30e0      	CPI  R30,0
00051f f439      	BRNE _0x2020036
000520 3225      	CPI  R18,37
000521 f411      	BRNE _0x2020037
000522 e011      	LDI  R17,LOW(1)
000523 c002      	RJMP _0x2020038
                 _0x2020037:
000524 940e 0965 	CALL SUBOPT_0x1C
                 _0x2020038:
000526 c1de      	RJMP _0x2020035
                 _0x2020036:
000527 30e1      	CPI  R30,LOW(0x1)
000528 f4c1      	BRNE _0x2020039
000529 3225      	CPI  R18,37
00052a f419      	BRNE _0x202003A
00052b 940e 0965 	CALL SUBOPT_0x1C
00052d c1d6      	RJMP _0x2020114
                 _0x202003A:
00052e e012      	LDI  R17,LOW(2)
00052f e0e0      	LDI  R30,LOW(0)
000530 8bed      	STD  Y+21,R30
000531 e000      	LDI  R16,LOW(0)
000532 322d      	CPI  R18,45
000533 f411      	BRNE _0x202003B
000534 e001      	LDI  R16,LOW(1)
000535 c1cf      	RJMP _0x2020035
                 _0x202003B:
000536 322b      	CPI  R18,43
000537 f419      	BRNE _0x202003C
000538 e2eb      	LDI  R30,LOW(43)
000539 8bed      	STD  Y+21,R30
00053a c1ca      	RJMP _0x2020035
                 _0x202003C:
00053b 3220      	CPI  R18,32
00053c f419      	BRNE _0x202003D
00053d e2e0      	LDI  R30,LOW(32)
00053e 8bed      	STD  Y+21,R30
00053f c1c5      	RJMP _0x2020035
                 _0x202003D:
000540 c002      	RJMP _0x202003E
                 _0x2020039:
000541 30e2      	CPI  R30,LOW(0x2)
000542 f439      	BRNE _0x202003F
                 _0x202003E:
000543 e050      	LDI  R21,LOW(0)
000544 e013      	LDI  R17,LOW(3)
000545 3320      	CPI  R18,48
000546 f411      	BRNE _0x2020040
000547 6800      	ORI  R16,LOW(128)
000548 c1bc      	RJMP _0x2020035
                 _0x2020040:
000549 c002      	RJMP _0x2020041
                 _0x202003F:
00054a 30e3      	CPI  R30,LOW(0x3)
00054b f491      	BRNE _0x2020042
                 _0x2020041:
00054c 3320      	CPI  R18,48
00054d f010      	BRLO _0x2020044
00054e 332a      	CPI  R18,58
00054f f008      	BRLO _0x2020045
                 _0x2020044:
000550 c007      	RJMP _0x2020043
                 _0x2020045:
000551 e0aa      	LDI  R26,LOW(10)
000552 9f5a      	MUL  R21,R26
000553 2d50      	MOV  R21,R0
000554 2fe2      	MOV  R30,R18
000555 53e0      	SUBI R30,LOW(48)
000556 0f5e      	ADD  R21,R30
000557 c1ad      	RJMP _0x2020035
                 _0x2020043:
000558 e040      	LDI  R20,LOW(0)
000559 322e      	CPI  R18,46
00055a f411      	BRNE _0x2020046
00055b e014      	LDI  R17,LOW(4)
00055c c1a8      	RJMP _0x2020035
                 _0x2020046:
00055d c00f      	RJMP _0x2020047
                 _0x2020042:
00055e 30e4      	CPI  R30,LOW(0x4)
00055f f499      	BRNE _0x2020049
000560 3320      	CPI  R18,48
000561 f010      	BRLO _0x202004B
000562 332a      	CPI  R18,58
000563 f008      	BRLO _0x202004C
                 _0x202004B:
000564 c008      	RJMP _0x202004A
                 _0x202004C:
000565 6200      	ORI  R16,LOW(32)
000566 e0aa      	LDI  R26,LOW(10)
000567 9f4a      	MUL  R20,R26
000568 2d40      	MOV  R20,R0
000569 2fe2      	MOV  R30,R18
00056a 53e0      	SUBI R30,LOW(48)
00056b 0f4e      	ADD  R20,R30
00056c c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
00056d 362c      	CPI  R18,108
00056e f419      	BRNE _0x202004D
00056f 6002      	ORI  R16,LOW(2)
000570 e015      	LDI  R17,LOW(5)
000571 c193      	RJMP _0x2020035
                 _0x202004D:
000572 c003      	RJMP _0x202004E
                 _0x2020049:
000573 30e5      	CPI  R30,LOW(0x5)
000574 f009      	BREQ PC+2
000575 c18f      	RJMP _0x2020035
                 _0x202004E:
000576 2fe2      	MOV  R30,R18
000577 36e3      	CPI  R30,LOW(0x63)
000578 f459      	BRNE _0x2020053
000579 940e 096c 	CALL SUBOPT_0x1D
00057b 940e 0973 	CALL SUBOPT_0x1E
00057d 940e 096c 	CALL SUBOPT_0x1D
00057f 81a4      	LDD  R26,Z+4
000580 93aa      	ST   -Y,R26
000581 940e 097a 	CALL SUBOPT_0x1F
000583 c180      	RJMP _0x2020054
                 _0x2020053:
000584 34e5      	CPI  R30,LOW(0x45)
000585 f011      	BREQ _0x2020057
000586 36e5      	CPI  R30,LOW(0x65)
000587 f409      	BRNE _0x2020058
                 _0x2020057:
000588 c003      	RJMP _0x2020059
                 _0x2020058:
000589 36e6      	CPI  R30,LOW(0x66)
00058a f009      	BREQ PC+2
00058b c048      	RJMP _0x202005A
                 _0x2020059:
00058c 01fe      	MOVW R30,R28
00058d 9676      	ADIW R30,22
00058e 87ee      	STD  Y+14,R30
00058f 87ff      	STD  Y+14+1,R31
000590 940e 0980 	CALL SUBOPT_0x20
000592 940e 0cb5 	CALL __GETD1P
000594 940e 0987 	CALL SUBOPT_0x21
000596 940e 098c 	CALL SUBOPT_0x22
000598 85ad      	LDD  R26,Y+13
000599 23aa      	TST  R26
00059a f032      	BRMI _0x202005B
00059b 89ad      	LDD  R26,Y+21
00059c 32ab      	CPI  R26,LOW(0x2B)
00059d f059      	BREQ _0x202005D
00059e 32a0      	CPI  R26,LOW(0x20)
00059f f081      	BREQ _0x202005F
0005a0 c017      	RJMP _0x2020060
                 _0x202005B:
0005a1 940e 098e 	CALL SUBOPT_0x23
0005a3 940e 0a4b 	CALL __ANEGF1
0005a5 940e 0987 	CALL SUBOPT_0x21
0005a7 e2ed      	LDI  R30,LOW(45)
0005a8 8bed      	STD  Y+21,R30
                 _0x202005D:
0005a9 ff07      	SBRS R16,7
0005aa c005      	RJMP _0x2020061
0005ab 89ed      	LDD  R30,Y+21
0005ac 93ea      	ST   -Y,R30
0005ad 940e 097a 	CALL SUBOPT_0x1F
0005af c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
0005b0 85ee      	LDD  R30,Y+14
0005b1 85ff      	LDD  R31,Y+14+1
0005b2 9631      	ADIW R30,1
0005b3 87ee      	STD  Y+14,R30
0005b4 87ff      	STD  Y+14+1,R31
0005b5 9731      	SBIW R30,1
0005b6 89ad      	LDD  R26,Y+21
0005b7 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
0005b8 ff05      	SBRS R16,5
0005b9 e046      	LDI  R20,LOW(6)
0005ba 3626      	CPI  R18,102
0005bb f451      	BRNE _0x2020064
0005bc 940e 098e 	CALL SUBOPT_0x23
0005be 940e 0cd4 	CALL __PUTPARD1
0005c0 934a      	ST   -Y,R20
0005c1 89ab      	LDD  R26,Y+19
0005c2 89bc      	LDD  R27,Y+19+1
0005c3 940e 07b1 	CALL _ftoa
0005c5 c009      	RJMP _0x2020065
                 _0x2020064:
0005c6 940e 098e 	CALL SUBOPT_0x23
0005c8 940e 0cd4 	CALL __PUTPARD1
0005ca 934a      	ST   -Y,R20
0005cb 932a      	ST   -Y,R18
0005cc 89ac      	LDD  R26,Y+20
0005cd 89bd      	LDD  R27,Y+20+1
0005ce de51      	RCALL __ftoe_G101
                 _0x2020065:
0005cf 01fe      	MOVW R30,R28
0005d0 9676      	ADIW R30,22
0005d1 940e 0993 	CALL SUBOPT_0x24
0005d3 c01e      	RJMP _0x2020066
                 _0x202005A:
0005d4 37e3      	CPI  R30,LOW(0x73)
0005d5 f439      	BRNE _0x2020068
0005d6 940e 098c 	CALL SUBOPT_0x22
0005d8 940e 099b 	CALL SUBOPT_0x25
0005da 940e 0993 	CALL SUBOPT_0x24
0005dc c00e      	RJMP _0x2020069
                 _0x2020068:
0005dd 37e0      	CPI  R30,LOW(0x70)
0005de f4c1      	BRNE _0x202006B
0005df 940e 098c 	CALL SUBOPT_0x22
0005e1 940e 099b 	CALL SUBOPT_0x25
0005e3 87ee      	STD  Y+14,R30
0005e4 87ff      	STD  Y+14+1,R31
0005e5 85ae      	LDD  R26,Y+14
0005e6 85bf      	LDD  R27,Y+14+1
0005e7 940e 075c 	CALL _strlenf
0005e9 2f1e      	MOV  R17,R30
0005ea 6008      	ORI  R16,LOW(8)
                 _0x2020069:
0005eb 770f      	ANDI R16,LOW(127)
0005ec 3040      	CPI  R20,0
0005ed f011      	BREQ _0x202006D
0005ee 1741      	CP   R20,R17
0005ef f008      	BRLO _0x202006E
                 _0x202006D:
0005f0 c001      	RJMP _0x202006C
                 _0x202006E:
0005f1 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
0005f2 e040      	LDI  R20,LOW(0)
0005f3 e0e0      	LDI  R30,LOW(0)
0005f4 8bec      	STD  Y+20,R30
0005f5 e030      	LDI  R19,LOW(0)
0005f6 c06d      	RJMP _0x202006F
                 _0x202006B:
0005f7 36e4      	CPI  R30,LOW(0x64)
0005f8 f011      	BREQ _0x2020072
0005f9 36e9      	CPI  R30,LOW(0x69)
0005fa f411      	BRNE _0x2020073
                 _0x2020072:
0005fb 6004      	ORI  R16,LOW(4)
0005fc c002      	RJMP _0x2020074
                 _0x2020073:
0005fd 37e5      	CPI  R30,LOW(0x75)
0005fe f4a1      	BRNE _0x2020075
                 _0x2020074:
0005ff e0ea      	LDI  R30,LOW(10)
000600 8bec      	STD  Y+20,R30
000601 ff01      	SBRS R16,1
000602 c008      	RJMP _0x2020076
                +
000603 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000604 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000605 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000606 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000607 940e 09a0 	CALL SUBOPT_0x26
000609 e01a      	LDI  R17,LOW(10)
00060a c022      	RJMP _0x2020077
                 _0x2020076:
                +
00060b e1e0     +LDI R30 , LOW ( 0x2710 )
00060c e2f7     +LDI R31 , HIGH ( 0x2710 )
00060d e060     +LDI R22 , BYTE3 ( 0x2710 )
00060e e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00060f 940e 09a0 	CALL SUBOPT_0x26
000611 e015      	LDI  R17,LOW(5)
000612 c01a      	RJMP _0x2020077
                 _0x2020075:
000613 35e8      	CPI  R30,LOW(0x58)
000614 f411      	BRNE _0x2020079
000615 6008      	ORI  R16,LOW(8)
000616 c003      	RJMP _0x202007A
                 _0x2020079:
000617 37e8      	CPI  R30,LOW(0x78)
000618 f009      	BREQ PC+2
000619 c0ea      	RJMP _0x20200B8
                 _0x202007A:
00061a e1e0      	LDI  R30,LOW(16)
00061b 8bec      	STD  Y+20,R30
00061c ff01      	SBRS R16,1
00061d c008      	RJMP _0x202007C
                +
00061e e0e0     +LDI R30 , LOW ( 0x10000000 )
00061f e0f0     +LDI R31 , HIGH ( 0x10000000 )
000620 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000621 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000622 940e 09a0 	CALL SUBOPT_0x26
000624 e018      	LDI  R17,LOW(8)
000625 c007      	RJMP _0x2020077
                 _0x202007C:
                +
000626 e0e0     +LDI R30 , LOW ( 0x1000 )
000627 e1f0     +LDI R31 , HIGH ( 0x1000 )
000628 e060     +LDI R22 , BYTE3 ( 0x1000 )
000629 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00062a 940e 09a0 	CALL SUBOPT_0x26
00062c e014      	LDI  R17,LOW(4)
                 _0x2020077:
00062d 3040      	CPI  R20,0
00062e f011      	BREQ _0x202007D
00062f 770f      	ANDI R16,LOW(127)
000630 c001      	RJMP _0x202007E
                 _0x202007D:
000631 e041      	LDI  R20,LOW(1)
                 _0x202007E:
000632 ff01      	SBRS R16,1
000633 c008      	RJMP _0x202007F
000634 940e 098c 	CALL SUBOPT_0x22
000636 940e 0980 	CALL SUBOPT_0x20
000638 9614      	ADIW R26,4
000639 940e 0cb5 	CALL __GETD1P
00063b c00f      	RJMP _0x2020115
                 _0x202007F:
00063c ff02      	SBRS R16,2
00063d c007      	RJMP _0x2020081
00063e 940e 098c 	CALL SUBOPT_0x22
000640 940e 099b 	CALL SUBOPT_0x25
000642 940e 0c17 	CALL __CWD1
000644 c006      	RJMP _0x2020115
                 _0x2020081:
000645 940e 098c 	CALL SUBOPT_0x22
000647 940e 099b 	CALL SUBOPT_0x25
000649 2766      	CLR  R22
00064a 2777      	CLR  R23
                 _0x2020115:
                +
00064b 87ea     +STD Y + 10 , R30
00064c 87fb     +STD Y + 10 + 1 , R31
00064d 876c     +STD Y + 10 + 2 , R22
00064e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00064f ff02      	SBRS R16,2
000650 c012      	RJMP _0x2020083
000651 85ad      	LDD  R26,Y+13
000652 23aa      	TST  R26
000653 f442      	BRPL _0x2020084
000654 940e 098e 	CALL SUBOPT_0x23
000656 940e 0c01 	CALL __ANEGD1
000658 940e 0987 	CALL SUBOPT_0x21
00065a e2ed      	LDI  R30,LOW(45)
00065b 8bed      	STD  Y+21,R30
                 _0x2020084:
00065c 89ed      	LDD  R30,Y+21
00065d 30e0      	CPI  R30,0
00065e f019      	BREQ _0x2020085
00065f 5f1f      	SUBI R17,-LOW(1)
000660 5f4f      	SUBI R20,-LOW(1)
000661 c001      	RJMP _0x2020086
                 _0x2020085:
000662 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
000663 2f34      	MOV  R19,R20
                 _0x202006F:
000664 fd00      	SBRC R16,0
000665 c014      	RJMP _0x2020087
                 _0x2020088:
000666 1715      	CP   R17,R21
000667 f410      	BRSH _0x202008B
000668 1735      	CP   R19,R21
000669 f008      	BRLO _0x202008C
                 _0x202008B:
00066a c00f      	RJMP _0x202008A
                 _0x202008C:
00066b ff07      	SBRS R16,7
00066c c008      	RJMP _0x202008D
00066d ff02      	SBRS R16,2
00066e c004      	RJMP _0x202008E
00066f 7f0b      	ANDI R16,LOW(251)
000670 892d      	LDD  R18,Y+21
000671 5011      	SUBI R17,LOW(1)
000672 c001      	RJMP _0x202008F
                 _0x202008E:
000673 e320      	LDI  R18,LOW(48)
                 _0x202008F:
000674 c001      	RJMP _0x2020090
                 _0x202008D:
000675 e220      	LDI  R18,LOW(32)
                 _0x2020090:
000676 940e 0965 	CALL SUBOPT_0x1C
000678 5051      	SUBI R21,LOW(1)
000679 cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
00067a 1714      	CP   R17,R20
00067b f490      	BRSH _0x2020093
00067c 6100      	ORI  R16,LOW(16)
00067d ff02      	SBRS R16,2
00067e c006      	RJMP _0x2020094
00067f 940e 09a5 	CALL SUBOPT_0x27
000681 f009      	BREQ _0x2020095
000682 5051      	SUBI R21,LOW(1)
                 _0x2020095:
000683 5011      	SUBI R17,LOW(1)
000684 5041      	SUBI R20,LOW(1)
                 _0x2020094:
000685 e3e0      	LDI  R30,LOW(48)
000686 93ea      	ST   -Y,R30
000687 940e 097a 	CALL SUBOPT_0x1F
000689 3050      	CPI  R21,0
00068a f009      	BREQ _0x2020096
00068b 5051      	SUBI R21,LOW(1)
                 _0x2020096:
00068c 5041      	SUBI R20,LOW(1)
00068d cfec      	RJMP _0x2020091
                 _0x2020093:
00068e 2f31      	MOV  R19,R17
00068f 89ec      	LDD  R30,Y+20
000690 30e0      	CPI  R30,0
000691 f4b9      	BRNE _0x2020097
                 _0x2020098:
000692 3030      	CPI  R19,0
000693 f0a1      	BREQ _0x202009A
000694 ff03      	SBRS R16,3
000695 c006      	RJMP _0x202009B
000696 85ee      	LDD  R30,Y+14
000697 85ff      	LDD  R31,Y+14+1
000698 9125      	LPM  R18,Z+
000699 87ee      	STD  Y+14,R30
00069a 87ff      	STD  Y+14+1,R31
00069b c005      	RJMP _0x202009C
                 _0x202009B:
00069c 85ae      	LDD  R26,Y+14
00069d 85bf      	LDD  R27,Y+14+1
00069e 912d      	LD   R18,X+
00069f 87ae      	STD  Y+14,R26
0006a0 87bf      	STD  Y+14+1,R27
                 _0x202009C:
0006a1 940e 0965 	CALL SUBOPT_0x1C
0006a3 3050      	CPI  R21,0
0006a4 f009      	BREQ _0x202009D
0006a5 5051      	SUBI R21,LOW(1)
                 _0x202009D:
0006a6 5031      	SUBI R19,LOW(1)
0006a7 cfea      	RJMP _0x2020098
                 _0x202009A:
0006a8 c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
0006a9 940e 09b7 	CALL SUBOPT_0x28
0006ab 940e 0c54 	CALL __DIVD21U
0006ad 2f2e      	MOV  R18,R30
0006ae 302a      	CPI  R18,10
0006af f030      	BRLO _0x20200A2
0006b0 ff03      	SBRS R16,3
0006b1 c002      	RJMP _0x20200A3
0006b2 5c29      	SUBI R18,-LOW(55)
0006b3 c001      	RJMP _0x20200A4
                 _0x20200A3:
0006b4 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
0006b5 c001      	RJMP _0x20200A5
                 _0x20200A2:
0006b6 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
0006b7 fd04      	SBRC R16,4
0006b8 c021      	RJMP _0x20200A7
0006b9 3321      	CPI  R18,49
0006ba f460      	BRSH _0x20200A9
                +
0006bb 89a8     +LDD R26 , Y + 16
0006bc 89b9     +LDD R27 , Y + 16 + 1
0006bd 898a     +LDD R24 , Y + 16 + 2
0006be 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0006bf 30a1     +CPI R26 , LOW ( 0x1 )
0006c0 e0e0     +LDI R30 , HIGH ( 0x1 )
0006c1 07be     +CPC R27 , R30
0006c2 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0006c3 078e     +CPC R24 , R30
0006c4 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0006c5 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0006c6 f409      	BRNE _0x20200A8
                 _0x20200A9:
0006c7 c00b      	RJMP _0x20200AB
                 _0x20200A8:
0006c8 1743      	CP   R20,R19
0006c9 f440      	BRSH _0x2020116
0006ca 1753      	CP   R21,R19
0006cb f010      	BRLO _0x20200AE
0006cc ff00      	SBRS R16,0
0006cd c001      	RJMP _0x20200AF
                 _0x20200AE:
0006ce c010      	RJMP _0x20200AD
                 _0x20200AF:
0006cf e220      	LDI  R18,LOW(32)
0006d0 ff07      	SBRS R16,7
0006d1 c008      	RJMP _0x20200B0
                 _0x2020116:
0006d2 e320      	LDI  R18,LOW(48)
                 _0x20200AB:
0006d3 6100      	ORI  R16,LOW(16)
0006d4 ff02      	SBRS R16,2
0006d5 c004      	RJMP _0x20200B1
0006d6 940e 09a5 	CALL SUBOPT_0x27
0006d8 f009      	BREQ _0x20200B2
0006d9 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
0006da 940e 0965 	CALL SUBOPT_0x1C
0006dc 3050      	CPI  R21,0
0006dd f009      	BREQ _0x20200B3
0006de 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
0006df 5031      	SUBI R19,LOW(1)
0006e0 940e 09b7 	CALL SUBOPT_0x28
0006e2 940e 0c93 	CALL __MODD21U
0006e4 940e 0987 	CALL SUBOPT_0x21
0006e6 89ec      	LDD  R30,Y+20
                +
0006e7 89a8     +LDD R26 , Y + 16
0006e8 89b9     +LDD R27 , Y + 16 + 1
0006e9 898a     +LDD R24 , Y + 16 + 2
0006ea 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0006eb 27ff      	CLR  R31
0006ec 2766      	CLR  R22
0006ed 2777      	CLR  R23
0006ee 940e 0c54 	CALL __DIVD21U
0006f0 940e 09a0 	CALL SUBOPT_0x26
                +
0006f2 89e8     +LDD R30 , Y + 16
0006f3 89f9     +LDD R31 , Y + 16 + 1
0006f4 896a     +LDD R22 , Y + 16 + 2
0006f5 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0006f6 940e 0cf5 	CALL __CPD10
0006f8 f009      	BREQ _0x20200A1
0006f9 cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
0006fa ff00      	SBRS R16,0
0006fb c008      	RJMP _0x20200B4
                 _0x20200B5:
0006fc 3050      	CPI  R21,0
0006fd f031      	BREQ _0x20200B7
0006fe 5051      	SUBI R21,LOW(1)
0006ff e2e0      	LDI  R30,LOW(32)
000700 93ea      	ST   -Y,R30
000701 940e 097a 	CALL SUBOPT_0x1F
000703 cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
000704 e010      	LDI  R17,LOW(0)
                 _0x2020035:
000705 ce0c      	RJMP _0x2020030
                 _0x2020032:
000706 81ae      	LDD  R26,Y+6
000707 81bf      	LDD  R27,Y+6+1
000708 940e 0cb1 	CALL __GETW1P
00070a 940e 0d00 	CALL __LOADLOCR6
00070c 96ef      	ADIW R28,63
00070d 966f      	ADIW R28,31
00070e 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00070f 92ff      	PUSH R15
000710 2ef8      	MOV  R15,R24
000711 9726      	SBIW R28,6
000712 940e 0cfb 	CALL __SAVELOCR4
000714 940e 09c0 	CALL SUBOPT_0x29
000716 9730      	SBIW R30,0
000717 f419      	BRNE _0x20200B9
000718 efef      	LDI  R30,LOW(65535)
000719 efff      	LDI  R31,HIGH(65535)
00071a c023      	RJMP _0x20C0004
                 _0x20200B9:
00071b 01de      	MOVW R26,R28
00071c 9616      	ADIW R26,6
00071d 940e 0bf4 	CALL __ADDW2R15
00071f 018d      	MOVW R16,R26
000720 940e 09c0 	CALL SUBOPT_0x29
000722 83ee      	STD  Y+6,R30
000723 83ff      	STD  Y+6+1,R31
000724 e0e0      	LDI  R30,LOW(0)
000725 87e8      	STD  Y+8,R30
000726 87e9      	STD  Y+8+1,R30
000727 01de      	MOVW R26,R28
000728 961a      	ADIW R26,10
000729 940e 0bf4 	CALL __ADDW2R15
00072b 940e 0cb1 	CALL __GETW1P
00072d 93fa      	ST   -Y,R31
00072e 93ea      	ST   -Y,R30
00072f 931a      	ST   -Y,R17
000730 930a      	ST   -Y,R16
000731 eee6      	LDI  R30,LOW(_put_buff_G101)
000732 e0f3      	LDI  R31,HIGH(_put_buff_G101)
000733 93fa      	ST   -Y,R31
000734 93ea      	ST   -Y,R30
000735 01de      	MOVW R26,R28
000736 961a      	ADIW R26,10
000737 ddbd      	RCALL __print_G101
000738 019f      	MOVW R18,R30
000739 81ae      	LDD  R26,Y+6
00073a 81bf      	LDD  R27,Y+6+1
00073b e0e0      	LDI  R30,LOW(0)
00073c 93ec      	ST   X,R30
00073d 01f9      	MOVW R30,R18
                 _0x20C0004:
00073e 940e 0d02 	CALL __LOADLOCR4
000740 962a      	ADIW R28,10
000741 90ff      	POP  R15
000742 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000743 93ba      	ST   -Y,R27
000744 93aa      	ST   -Y,R26
000745 91e9          ld   r30,y+
000746 91f9          ld   r31,y+
000747 91a9          ld   r26,y+
000748 91b9          ld   r27,y+
000749 01cd          movw r24,r26
                 strcpyf0:
00074a 9005      	lpm  r0,z+
00074b 920d          st   x+,r0
00074c 2000          tst  r0
00074d f7e1          brne strcpyf0
00074e 01fc          movw r30,r24
00074f 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000750 93ba      	ST   -Y,R27
000751 93aa      	ST   -Y,R26
000752 91a9          ld   r26,y+
000753 91b9          ld   r27,y+
000754 27ee          clr  r30
000755 27ff          clr  r31
                 strlen0:
000756 916d          ld   r22,x+
000757 2366          tst  r22
000758 f011          breq strlen1
000759 9631          adiw r30,1
00075a cffb          rjmp strlen0
                 strlen1:
00075b 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00075c 93ba      	ST   -Y,R27
00075d 93aa      	ST   -Y,R26
00075e 27aa          clr  r26
00075f 27bb          clr  r27
000760 91e9          ld   r30,y+
000761 91f9          ld   r31,y+
                 strlenf0:
000762 9005      	lpm  r0,z+
000763 2000          tst  r0
000764 f011          breq strlenf1
000765 9611          adiw r26,1
000766 cffb          rjmp strlenf0
                 strlenf1:
000767 01fd          movw r30,r26
000768 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000769 940e 0cd9 	CALL __PUTPARD2
00076b 817b         ldd  r23,y+3
00076c 816a         ldd  r22,y+2
00076d 81f9         ldd  r31,y+1
00076e 81e8         ld   r30,y
00076f fb77         bst  r23,7
000770 0f77         lsl  r23
000771 fd67         sbrc r22,7
000772 6071         sbr  r23,1
000773 2f97         mov  r25,r23
000774 579e         subi r25,0x7e
000775 f081         breq __ftrunc0
000776 f078         brcs __ftrunc0
000777 3198         cpi  r25,24
000778 f490         brsh __ftrunc1
000779 27aa         clr  r26
00077a 27bb         clr  r27
00077b 2788         clr  r24
                 __ftrunc2:
00077c 9408         sec
00077d 9587         ror  r24
00077e 95b7         ror  r27
00077f 95a7         ror  r26
000780 959a         dec  r25
000781 f7d1         brne __ftrunc2
000782 23ea         and  r30,r26
000783 23fb         and  r31,r27
000784 2368         and  r22,r24
000785 c005         rjmp __ftrunc1
                 __ftrunc0:
000786 94e8         clt
000787 2777         clr  r23
000788 27ee         clr  r30
000789 27ff         clr  r31
00078a 2766         clr  r22
                 __ftrunc1:
00078b 776f         cbr  r22,0x80
00078c 9576         lsr  r23
00078d f408         brcc __ftrunc3
00078e 6860         sbr  r22,0x80
                 __ftrunc3:
00078f f977         bld  r23,7
000790 91a9         ld   r26,y+
000791 91b9         ld   r27,y+
000792 9189         ld   r24,y+
000793 9199         ld   r25,y+
000794 17ea         cp   r30,r26
000795 07fb         cpc  r31,r27
000796 0768         cpc  r22,r24
000797 0779         cpc  r23,r25
000798 fb97         bst  r25,7
000799 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
00079a 940e 0cd9 	CALL __PUTPARD2
00079c 940e 0cca 	CALL __GETD2S0
00079e 940e 0769 	CALL _ftrunc
0007a0 940e 0ccf 	CALL __PUTD1S0
0007a2 f419          brne __floor1
                 __floor0:
0007a3 940e 0cc5 	CALL __GETD1S0
0007a5 c009      	RJMP _0x20C0003
                 __floor1:
0007a6 f7e6          brtc __floor0
0007a7 940e 0cc5 	CALL __GETD1S0
                +
0007a9 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0007aa e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0007ab e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0007ac e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0007ad 940e 0aea 	CALL __SUBF12
                 _0x20C0003:
0007af 9624      	ADIW R28,4
0007b0 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0007b1 93ba      	ST   -Y,R27
0007b2 93aa      	ST   -Y,R26
0007b3 9724      	SBIW R28,4
0007b4 d0bc      	RCALL SUBOPT_0x5
0007b5 e0e0      	LDI  R30,LOW(0)
0007b6 83ea      	STD  Y+2,R30
0007b7 e3ef      	LDI  R30,LOW(63)
0007b8 83eb      	STD  Y+3,R30
0007b9 931a      	ST   -Y,R17
0007ba 930a      	ST   -Y,R16
0007bb 85eb      	LDD  R30,Y+11
0007bc 85fc      	LDD  R31,Y+11+1
0007bd 3fef      	CPI  R30,LOW(0xFFFF)
0007be efaf      	LDI  R26,HIGH(0xFFFF)
0007bf 07fa      	CPC  R31,R26
0007c0 f431      	BRNE _0x20A000D
0007c1 d205      	RCALL SUBOPT_0x2A
                +
0007c2 ecae     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0007c3 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
0007c4 940e 0743 	CALL _strcpyf
0007c6 c08a      	RJMP _0x20C0002
                 _0x20A000D:
0007c7 3fef      	CPI  R30,LOW(0x7FFF)
0007c8 e7af      	LDI  R26,HIGH(0x7FFF)
0007c9 07fa      	CPC  R31,R26
0007ca f431      	BRNE _0x20A000C
0007cb d1fb      	RCALL SUBOPT_0x2A
                +
0007cc ecaf     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0007cd e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
0007ce 940e 0743 	CALL _strcpyf
0007d0 c080      	RJMP _0x20C0002
                 _0x20A000C:
0007d1 85ac      	LDD  R26,Y+12
0007d2 23aa      	TST  R26
0007d3 f452      	BRPL _0x20A000F
                +
0007d4 85e9     +LDD R30 , Y + 9
0007d5 85fa     +LDD R31 , Y + 9 + 1
0007d6 856b     +LDD R22 , Y + 9 + 2
0007d7 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0007d8 940e 0a4b 	CALL __ANEGF1
0007da d1f1      	RCALL SUBOPT_0x2B
0007db d1f5      	RCALL SUBOPT_0x2C
0007dc e2ed      	LDI  R30,LOW(45)
0007dd 93ec      	ST   X,R30
                 _0x20A000F:
0007de 85a8      	LDD  R26,Y+8
0007df 30a7      	CPI  R26,LOW(0x7)
0007e0 f010      	BRLO _0x20A0010
0007e1 e0e6      	LDI  R30,LOW(6)
0007e2 87e8      	STD  Y+8,R30
                 _0x20A0010:
0007e3 8518      	LDD  R17,Y+8
                 _0x20A0011:
0007e4 2fe1      	MOV  R30,R17
0007e5 5011      	SUBI R17,1
0007e6 30e0      	CPI  R30,0
0007e7 f021      	BREQ _0x20A0013
0007e8 d1ef      	RCALL SUBOPT_0x2D
0007e9 d15d      	RCALL SUBOPT_0x17
0007ea d1f2      	RCALL SUBOPT_0x2E
0007eb cff8      	RJMP _0x20A0011
                 _0x20A0013:
0007ec d1f5      	RCALL SUBOPT_0x2F
0007ed 940e 0af1 	CALL __ADDF12
0007ef d1dc      	RCALL SUBOPT_0x2B
0007f0 e010      	LDI  R17,LOW(0)
                +
0007f1 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0007f2 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0007f3 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0007f4 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0007f5 d1e7      	RCALL SUBOPT_0x2E
                 _0x20A0014:
0007f6 d1eb      	RCALL SUBOPT_0x2F
0007f7 940e 0bd4 	CALL __CMPF12
0007f9 f068      	BRLO _0x20A0016
0007fa d1dd      	RCALL SUBOPT_0x2D
0007fb d138      	RCALL SUBOPT_0x14
0007fc d1e0      	RCALL SUBOPT_0x2E
0007fd 5f1f      	SUBI R17,-LOW(1)
0007fe 3217      	CPI  R17,39
0007ff f030      	BRLO _0x20A0017
000800 d1c6      	RCALL SUBOPT_0x2A
                +
000801 eda3     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000802 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000803 940e 0743 	CALL _strcpyf
000805 c04b      	RJMP _0x20C0002
                 _0x20A0017:
000806 cfef      	RJMP _0x20A0014
                 _0x20A0016:
000807 3010      	CPI  R17,0
000808 f421      	BRNE _0x20A0018
000809 d1c7      	RCALL SUBOPT_0x2C
00080a e3e0      	LDI  R30,LOW(48)
00080b 93ec      	ST   X,R30
00080c c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
00080d 2fe1      	MOV  R30,R17
00080e 5011      	SUBI R17,1
00080f 30e0      	CPI  R30,0
000810 f0e1      	BREQ _0x20A001C
000811 d1c6      	RCALL SUBOPT_0x2D
000812 d134      	RCALL SUBOPT_0x17
000813 d12c      	RCALL SUBOPT_0x16
000814 01df      	MOVW R26,R30
000815 01cb      	MOVW R24,R22
000816 940e 079a 	CALL _floor
000818 d1c4      	RCALL SUBOPT_0x2E
000819 d1c8      	RCALL SUBOPT_0x2F
00081a 940e 0b8f 	CALL __DIVF21
00081c 940e 0a7e 	CALL __CFD1U
00081e 2f0e      	MOV  R16,R30
00081f d1b1      	RCALL SUBOPT_0x2C
000820 d134      	RCALL SUBOPT_0x19
000821 e0f0      	LDI  R31,0
000822 d1b5      	RCALL SUBOPT_0x2D
000823 940e 0c17 	CALL __CWD1
000825 940e 0ab7 	CALL __CDF1
000827 940e 0b41 	CALL __MULF12
000829 d1c1      	RCALL SUBOPT_0x30
00082a d12f      	RCALL SUBOPT_0x1A
00082b d1a0      	RCALL SUBOPT_0x2B
00082c cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
00082d 85e8      	LDD  R30,Y+8
00082e 30e0      	CPI  R30,0
00082f f0e9      	BREQ _0x20C0001
000830 d1a0      	RCALL SUBOPT_0x2C
000831 e2ee      	LDI  R30,LOW(46)
000832 93ec      	ST   X,R30
                 _0x20A001E:
000833 85e8      	LDD  R30,Y+8
000834 50e1      	SUBI R30,LOW(1)
000835 87e8      	STD  Y+8,R30
000836 5fef      	SUBI R30,-LOW(1)
000837 f0a9      	BREQ _0x20A0020
000838 d1b2      	RCALL SUBOPT_0x30
000839 d0fa      	RCALL SUBOPT_0x14
00083a d191      	RCALL SUBOPT_0x2B
                +
00083b 85e9     +LDD R30 , Y + 9
00083c 85fa     +LDD R31 , Y + 9 + 1
00083d 856b     +LDD R22 , Y + 9 + 2
00083e 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00083f 940e 0a7e 	CALL __CFD1U
000841 2f0e      	MOV  R16,R30
000842 d18e      	RCALL SUBOPT_0x2C
000843 d111      	RCALL SUBOPT_0x19
000844 e0f0      	LDI  R31,0
000845 d1a5      	RCALL SUBOPT_0x30
000846 940e 0c17 	CALL __CWD1
000848 940e 0ab7 	CALL __CDF1
00084a d10f      	RCALL SUBOPT_0x1A
00084b d180      	RCALL SUBOPT_0x2B
00084c cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
00084d 81ae      	LDD  R26,Y+6
00084e 81bf      	LDD  R27,Y+6+1
00084f e0e0      	LDI  R30,LOW(0)
000850 93ec      	ST   X,R30
                 _0x20C0002:
000851 8119      	LDD  R17,Y+1
000852 8108      	LDD  R16,Y+0
000853 962d      	ADIW R28,13
000854 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _buffer:
000193           	.BYTE 0x10
                 _millis:
0001a3           	.BYTE 0x4
                 _last_time:
0001a7           	.BYTE 0x4
                 __base_y_G100:
0001ab           	.BYTE 0x4
                 __seed_G105:
0001af           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000855 940e 09f5 	CALL _i2c_start
000857 eda0      	LDI  R26,LOW(208)
000858 940c 0a29 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00085a 940e 0a29 	CALL _i2c_write
00085c 940c 0a04 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2:
00085e e0a1      	LDI  R26,LOW(1)
00085f 940e 0a0e 	CALL _i2c_read
000861 2fae      	MOV  R26,R30
000862 940c 012b 	JMP  _bcd_to_byte
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x3:
000864 940e 0138 	CALL _byte_to_bcd
000866 2fae      	MOV  R26,R30
000867 940e 0a29 	CALL _i2c_write
000869 81e8      	LD   R30,Y
00086a 81f9      	LDD  R31,Y+1
00086b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
00086c 940e 03a7 	CALL _lcd_puts
00086e e0e0      	LDI  R30,LOW(0)
00086f 93ea      	ST   -Y,R30
000870 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000871 e0e0      	LDI  R30,LOW(0)
000872 83e8      	ST   Y,R30
000873 83e9      	STD  Y+1,R30
000874 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x6:
000875 e0e0      	LDI  R30,LOW(0)
000876 93ea      	ST   -Y,R30
000877 e0a0      	LDI  R26,LOW(0)
000878 940e 0379 	CALL _lcd_gotoxy
00087a e9e3      	LDI  R30,LOW(_buffer)
00087b e0f1      	LDI  R31,HIGH(_buffer)
00087c 93fa      	ST   -Y,R31
00087d 93ea      	ST   -Y,R30
                +
00087e e9e7     +LDI R30 , LOW ( 2 * _0x0 + ( 45 ) )
00087f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 45 ) )
                 	__POINTW1FN _0x0,45
000880 93fa      	ST   -Y,R31
000881 93ea      	ST   -Y,R30
000882 81ee      	LDD  R30,Y+6
000883 27ff      	CLR  R31
000884 2766      	CLR  R22
000885 2777      	CLR  R23
000886 940e 0cd4 	CALL __PUTPARD1
000888 85e9      	LDD  R30,Y+9
000889 27ff      	CLR  R31
00088a 2766      	CLR  R22
00088b 2777      	CLR  R23
00088c 940e 0cd4 	CALL __PUTPARD1
00088e 85ec      	LDD  R30,Y+12
00088f 27ff      	CLR  R31
000890 2766      	CLR  R22
000891 2777      	CLR  R23
000892 940e 0cd4 	CALL __PUTPARD1
000894 e08c      	LDI  R24,12
000895 940e 070f 	CALL _sprintf
000897 9660      	ADIW R28,16
000898 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x7:
000899 940e 03a7 	CALL _lcd_puts
00089b e9e3      	LDI  R30,LOW(_buffer)
00089c e0f1      	LDI  R31,HIGH(_buffer)
00089d 93fa      	ST   -Y,R31
00089e 93ea      	ST   -Y,R30
                +
00089f ebe1     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
0008a0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
                 	__POINTW1FN _0x0,71
0008a1 93fa      	ST   -Y,R31
0008a2 93ea      	ST   -Y,R30
0008a3 85ea      	LDD  R30,Y+10
0008a4 27ff      	CLR  R31
0008a5 2766      	CLR  R22
0008a6 2777      	CLR  R23
0008a7 940e 0cd4 	CALL __PUTPARD1
0008a9 85ed      	LDD  R30,Y+13
0008aa 27ff      	CLR  R31
0008ab 2766      	CLR  R22
0008ac 2777      	CLR  R23
0008ad 940e 0cd4 	CALL __PUTPARD1
0008af 89e8      	LDD  R30,Y+16
0008b0 27ff      	CLR  R31
0008b1 2766      	CLR  R22
0008b2 2777      	CLR  R23
0008b3 940e 0cd4 	CALL __PUTPARD1
0008b5 e08c      	LDI  R24,12
0008b6 940e 070f 	CALL _sprintf
0008b8 9660      	ADIW R28,16
0008b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0008ba e9a3      	LDI  R26,LOW(_buffer)
0008bb e0b1      	LDI  R27,HIGH(_buffer)
0008bc 940e 03a7 	CALL _lcd_puts
0008be 94e8      	CLT
0008bf f820      	BLD  R2,0
0008c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
0008c1 2fe1      	MOV  R30,R17
0008c2 e0f0      	LDI  R31,0
0008c3 9733      	SBIW R30,3
0008c4 e0a3      	LDI  R26,LOW(3)
0008c5 e0b0      	LDI  R27,HIGH(3)
0008c6 940e 0c24 	CALL __MULW12
0008c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
0008c9 940e 01a6 	CALL _read
0008cb 2e4e      	MOV  R4,R30
0008cc efef      	LDI  R30,LOW(255)
0008cd 15e4      	CP   R30,R4
0008ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xB:
0008cf 91a0 01a7 	LDS  R26,_last_time
0008d1 91b0 01a8 	LDS  R27,_last_time+1
0008d3 9180 01a9 	LDS  R24,_last_time+2
0008d5 9190 01aa 	LDS  R25,_last_time+3
0008d7 91e0 01a3 	LDS  R30,_millis
0008d9 91f0 01a4 	LDS  R31,_millis+1
0008db 9160 01a5 	LDS  R22,_millis+2
0008dd 9170 01a6 	LDS  R23,_millis+3
0008df 940e 0bf8 	CALL __SUBD12
0008e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xC:
0008e2 91e0 01a3 	LDS  R30,_millis
0008e4 91f0 01a4 	LDS  R31,_millis+1
0008e6 9160 01a5 	LDS  R22,_millis+2
0008e8 9170 01a6 	LDS  R23,_millis+3
0008ea 93e0 01a7 	STS  _last_time,R30
0008ec 93f0 01a8 	STS  _last_time+1,R31
0008ee 9360 01a9 	STS  _last_time+2,R22
0008f0 9370 01aa 	STS  _last_time+3,R23
0008f2 9468      	SET
0008f3 f820      	BLD  R2,0
0008f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
0008f5 940e 036d 	CALL __lcd_write_data
0008f7 e0a3      	LDI  R26,LOW(3)
0008f8 e0b0      	LDI  R27,0
0008f9 940c 0a41 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xE:
0008fb e3a0      	LDI  R26,LOW(48)
0008fc 940e 0359 	CALL __lcd_write_nibble_G100
                +
0008fe ec88     +LDI R24 , LOW ( 200 )
0008ff e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000900 9701     +SBIW R24 , 1
000901 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000902 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
000903 91ed      	LD   R30,X+
000904 91fd      	LD   R31,X+
000905 9631      	ADIW R30,1
000906 93fe      	ST   -X,R31
000907 93ee      	ST   -X,R30
000908 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x10:
                +
000909 81ac     +LDD R26 , Y + 4
00090a 81bd     +LDD R27 , Y + 4 + 1
00090b 818e     +LDD R24 , Y + 4 + 2
00090c 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00090d e0e0     +LDI R30 , LOW ( 0x41200000 )
00090e e0f0     +LDI R31 , HIGH ( 0x41200000 )
00090f e260     +LDI R22 , BYTE3 ( 0x41200000 )
000910 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000911 940e 0b41 	CALL __MULF12
                +
000913 83ec     +STD Y + 4 , R30
000914 83fd     +STD Y + 4 + 1 , R31
000915 836e     +STD Y + 4 + 2 , R22
000916 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000917 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x11:
                +
000918 81ec     +LDD R30 , Y + 4
000919 81fd     +LDD R31 , Y + 4 + 1
00091a 816e     +LDD R22 , Y + 4 + 2
00091b 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00091c 85ac     +LDD R26 , Y + 12
00091d 85bd     +LDD R27 , Y + 12 + 1
00091e 858e     +LDD R24 , Y + 12 + 2
00091f 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000920 940e 0bd4 	CALL __CMPF12
000922 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
                +
000923 85ac     +LDD R26 , Y + 12
000924 85bd     +LDD R27 , Y + 12 + 1
000925 858e     +LDD R24 , Y + 12 + 2
000926 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000927 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x13:
                +
000928 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000929 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00092a ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00092b e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00092c 940e 0b41 	CALL __MULF12
                +
00092e 87ec     +STD Y + 12 , R30
00092f 87fd     +STD Y + 12 + 1 , R31
000930 876e     +STD Y + 12 + 2 , R22
000931 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000932 5f3f      	SUBI R19,-LOW(1)
000933 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
                +
000934 e0e0     +LDI R30 , LOW ( 0x41200000 )
000935 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000936 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000937 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000938 940e 0b41 	CALL __MULF12
00093a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
                +
00093b 87ec     +STD Y + 12 , R30
00093c 87fd     +STD Y + 12 + 1 , R31
00093d 876e     +STD Y + 12 + 2 , R22
00093e 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00093f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
                +
000940 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000941 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000942 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000943 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000944 940e 0af1 	CALL __ADDF12
000946 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
                +
000947 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000948 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000949 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00094a e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00094b 940e 0b41 	CALL __MULF12
00094d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
00094e 85a8      	LDD  R26,Y+8
00094f 85b9      	LDD  R27,Y+8+1
000950 9611      	ADIW R26,1
000951 87a8      	STD  Y+8,R26
000952 87b9      	STD  Y+8+1,R27
000953 9711      	SBIW R26,1
000954 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000955 2fe0      	MOV  R30,R16
000956 5de0      	SUBI R30,-LOW(48)
000957 93ec      	ST   X,R30
000958 2fe0      	MOV  R30,R16
000959 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
00095a 940e 0cde 	CALL __SWAPD12
00095c 940e 0aea 	CALL __SUBF12
00095e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
00095f 85e8      	LDD  R30,Y+8
000960 85f9      	LDD  R31,Y+8+1
000961 9631      	ADIW R30,1
000962 87e8      	STD  Y+8,R30
000963 87f9      	STD  Y+8+1,R31
000964 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1C:
000965 932a      	ST   -Y,R18
000966 81af      	LDD  R26,Y+7
000967 85b8      	LDD  R27,Y+7+1
000968 85e9      	LDD  R30,Y+9
000969 85fa      	LDD  R31,Y+9+1
00096a 9509      	ICALL
00096b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1D:
                +
00096c 01fe     +MOVW R30 , R28
00096d 5ae6     +SUBI R30 , LOW ( - 90 )
00096e 4fff     +SBCI R31 , HIGH ( - 90 )
00096f 9001     +LD R0 , Z +
000970 81f0     +LD R31 , Z
000971 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000972 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1E:
000973 9734      	SBIW R30,4
                +
000974 01de     +MOVW R26 , R28
000975 5aa6     +SUBI R26 , LOW ( - 90 )
000976 4fbf     +SBCI R27 , HIGH ( - 90 )
000977 93ed     +ST X + , R30
000978 93fc     +ST X , R31
                 	__PUTW1SX 90
000979 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F:
00097a 81af      	LDD  R26,Y+7
00097b 85b8      	LDD  R27,Y+7+1
00097c 85e9      	LDD  R30,Y+9
00097d 85fa      	LDD  R31,Y+9+1
00097e 9509      	ICALL
00097f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x20:
                +
000980 01de     +MOVW R26 , R28
000981 5aa6     +SUBI R26 , LOW ( - 90 )
000982 4fbf     +SBCI R27 , HIGH ( - 90 )
000983 900d     +LD R0 , X +
000984 91bc     +LD R27 , X
000985 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000986 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
                +
000987 87ea     +STD Y + 10 , R30
000988 87fb     +STD Y + 10 + 1 , R31
000989 876c     +STD Y + 10 + 2 , R22
00098a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00098b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x22:
00098c dfdf      	RCALL SUBOPT_0x1D
00098d cfe5      	RJMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
00098e 85ea     +LDD R30 , Y + 10
00098f 85fb     +LDD R31 , Y + 10 + 1
000990 856c     +LDD R22 , Y + 10 + 2
000991 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000992 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x24:
000993 87ee      	STD  Y+14,R30
000994 87ff      	STD  Y+14+1,R31
000995 85ae      	LDD  R26,Y+14
000996 85bf      	LDD  R27,Y+14+1
000997 940e 0750 	CALL _strlen
000999 2f1e      	MOV  R17,R30
00099a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
00099b dfe4      	RCALL SUBOPT_0x20
00099c 9614      	ADIW R26,4
00099d 940e 0cb1 	CALL __GETW1P
00099f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
                +
0009a0 8be8     +STD Y + 16 , R30
0009a1 8bf9     +STD Y + 16 + 1 , R31
0009a2 8b6a     +STD Y + 16 + 2 , R22
0009a3 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0009a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x27:
0009a5 7f0b      	ANDI R16,LOW(251)
0009a6 89ed      	LDD  R30,Y+21
0009a7 93ea      	ST   -Y,R30
                +
0009a8 01de     +MOVW R26 , R28
0009a9 5aa9     +SUBI R26 , LOW ( - 87 )
0009aa 4fbf     +SBCI R27 , HIGH ( - 87 )
0009ab 900d     +LD R0 , X +
0009ac 91bc     +LD R27 , X
0009ad 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0009ae 01fe     +MOVW R30 , R28
0009af 5ae7     +SUBI R30 , LOW ( - 89 )
0009b0 4fff     +SBCI R31 , HIGH ( - 89 )
0009b1 9001     +LD R0 , Z +
0009b2 81f0     +LD R31 , Z
0009b3 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0009b4 9509      	ICALL
0009b5 3050      	CPI  R21,0
0009b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
                +
0009b7 89e8     +LDD R30 , Y + 16
0009b8 89f9     +LDD R31 , Y + 16 + 1
0009b9 896a     +LDD R22 , Y + 16 + 2
0009ba 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0009bb 85aa     +LDD R26 , Y + 10
0009bc 85bb     +LDD R27 , Y + 10 + 1
0009bd 858c     +LDD R24 , Y + 10 + 2
0009be 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0009bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0009c0 01de      	MOVW R26,R28
0009c1 961c      	ADIW R26,12
0009c2 940e 0bf4 	CALL __ADDW2R15
0009c4 940e 0cb1 	CALL __GETW1P
0009c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0009c7 81ee      	LDD  R30,Y+6
0009c8 81ff      	LDD  R31,Y+6+1
0009c9 93fa      	ST   -Y,R31
0009ca 93ea      	ST   -Y,R30
0009cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B:
                +
0009cc 87e9     +STD Y + 9 , R30
0009cd 87fa     +STD Y + 9 + 1 , R31
0009ce 876b     +STD Y + 9 + 2 , R22
0009cf 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0009d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2C:
0009d1 81ae      	LDD  R26,Y+6
0009d2 81bf      	LDD  R27,Y+6+1
0009d3 9611      	ADIW R26,1
0009d4 83ae      	STD  Y+6,R26
0009d5 83bf      	STD  Y+6+1,R27
0009d6 9711      	SBIW R26,1
0009d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
                +
0009d8 81aa     +LDD R26 , Y + 2
0009d9 81bb     +LDD R27 , Y + 2 + 1
0009da 818c     +LDD R24 , Y + 2 + 2
0009db 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0009dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2E:
                +
0009dd 83ea     +STD Y + 2 , R30
0009de 83fb     +STD Y + 2 + 1 , R31
0009df 836c     +STD Y + 2 + 2 , R22
0009e0 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0009e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F:
                +
0009e2 81ea     +LDD R30 , Y + 2
0009e3 81fb     +LDD R31 , Y + 2 + 1
0009e4 816c     +LDD R22 , Y + 2 + 2
0009e5 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0009e6 85a9     +LDD R26 , Y + 9
0009e7 85ba     +LDD R27 , Y + 9 + 1
0009e8 858b     +LDD R24 , Y + 9 + 2
0009e9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0009ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
                +
0009eb 85a9     +LDD R26 , Y + 9
0009ec 85ba     +LDD R27 , Y + 9 + 1
0009ed 858b     +LDD R24 , Y + 9 + 2
0009ee 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0009ef 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=1
                 	.equ __scl_bit=0
                 	.equ __i2c_port=0x1B ;PORTA
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
0009f0 98d8      	cbi  __i2c_port,__scl_bit
0009f1 98d9      	cbi  __i2c_port,__sda_bit
0009f2 9ad0      	sbi  __i2c_dir,__scl_bit
0009f3 98d1      	cbi  __i2c_dir,__sda_bit
0009f4 c015      	rjmp __i2c_delay2
                 _i2c_start:
0009f5 98d1      	cbi  __i2c_dir,__sda_bit
0009f6 98d0      	cbi  __i2c_dir,__scl_bit
0009f7 27ee      	clr  r30
0009f8 0000      	nop
0009f9 9bc9      	sbis __i2c_pin,__sda_bit
0009fa 9508      	ret
0009fb 9bc8      	sbis __i2c_pin,__scl_bit
0009fc 9508      	ret
0009fd d004      	rcall __i2c_delay1
0009fe 9ad1      	sbi  __i2c_dir,__sda_bit
0009ff d002      	rcall __i2c_delay1
000a00 9ad0      	sbi  __i2c_dir,__scl_bit
000a01 e0e1      	ldi  r30,1
                 __i2c_delay1:
000a02 e06d      	ldi  r22,13
000a03 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
000a04 9ad1      	sbi  __i2c_dir,__sda_bit
000a05 9ad0      	sbi  __i2c_dir,__scl_bit
000a06 d003      	rcall __i2c_delay2
000a07 98d0      	cbi  __i2c_dir,__scl_bit
000a08 dff9      	rcall __i2c_delay1
000a09 98d1      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
000a0a e16b      	ldi  r22,27
                 __i2c_delay2l:
000a0b 956a      	dec  r22
000a0c f7f1      	brne __i2c_delay2l
000a0d 9508      	ret
                 _i2c_read:
000a0e e078      	ldi  r23,8
                 __i2c_read0:
000a0f 98d0      	cbi  __i2c_dir,__scl_bit
000a10 dff1      	rcall __i2c_delay1
                 __i2c_read3:
000a11 9bc8      	sbis __i2c_pin,__scl_bit
000a12 cffe      	rjmp __i2c_read3
000a13 dfee      	rcall __i2c_delay1
000a14 9488      	clc
000a15 99c9      	sbic __i2c_pin,__sda_bit
000a16 9408      	sec
000a17 9ad0      	sbi  __i2c_dir,__scl_bit
000a18 dff1      	rcall __i2c_delay2
000a19 1fee      	rol  r30
000a1a 957a      	dec  r23
000a1b f799      	brne __i2c_read0
000a1c 2f7a      	mov  r23,r26
000a1d 2377      	tst  r23
000a1e f411      	brne __i2c_read1
000a1f 98d1      	cbi  __i2c_dir,__sda_bit
000a20 c001      	rjmp __i2c_read2
                 __i2c_read1:
000a21 9ad1      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
000a22 dfdf      	rcall __i2c_delay1
000a23 98d0      	cbi  __i2c_dir,__scl_bit
000a24 dfe5      	rcall __i2c_delay2
000a25 9ad0      	sbi  __i2c_dir,__scl_bit
000a26 dfdb      	rcall __i2c_delay1
000a27 98d1      	cbi  __i2c_dir,__sda_bit
000a28 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
000a29 e078      	ldi  r23,8
                 __i2c_write0:
000a2a 0faa      	lsl  r26
000a2b f410      	brcc __i2c_write1
000a2c 98d1      	cbi  __i2c_dir,__sda_bit
000a2d c001      	rjmp __i2c_write2
                 __i2c_write1:
000a2e 9ad1      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
000a2f dfda      	rcall __i2c_delay2
000a30 98d0      	cbi  __i2c_dir,__scl_bit
000a31 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
000a32 9bc8      	sbis __i2c_pin,__scl_bit
000a33 cffe      	rjmp __i2c_write3
000a34 dfcd      	rcall __i2c_delay1
000a35 9ad0      	sbi  __i2c_dir,__scl_bit
000a36 957a      	dec  r23
000a37 f791      	brne __i2c_write0
000a38 98d1      	cbi  __i2c_dir,__sda_bit
000a39 dfc8      	rcall __i2c_delay1
000a3a 98d0      	cbi  __i2c_dir,__scl_bit
000a3b dfce      	rcall __i2c_delay2
000a3c e0e1      	ldi  r30,1
000a3d 99c9      	sbic __i2c_pin,__sda_bit
000a3e 27ee      	clr  r30
000a3f 9ad0      	sbi  __i2c_dir,__scl_bit
000a40 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
000a41 9610      	adiw r26,0
000a42 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000a43 ed80     +LDI R24 , LOW ( 0x7D0 )
000a44 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000a45 9701     +SBIW R24 , 1
000a46 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000a47 95a8      	wdr
000a48 9711      	sbiw r26,1
000a49 f7c9      	brne __delay_ms0
                 __delay_ms1:
000a4a 9508      	ret
                 
                 __ANEGF1:
000a4b 9730      	SBIW R30,0
000a4c 4060      	SBCI R22,0
000a4d 4070      	SBCI R23,0
000a4e f009      	BREQ __ANEGF10
000a4f 5870      	SUBI R23,0x80
                 __ANEGF10:
000a50 9508      	RET
                 
                 __ROUND_REPACK:
000a51 2355      	TST  R21
000a52 f442      	BRPL __REPACK
000a53 3850      	CPI  R21,0x80
000a54 f411      	BRNE __ROUND_REPACK0
000a55 ffe0      	SBRS R30,0
000a56 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000a57 9631      	ADIW R30,1
000a58 1f69      	ADC  R22,R25
000a59 1f79      	ADC  R23,R25
000a5a f06b      	BRVS __REPACK1
                 
                 __REPACK:
000a5b e850      	LDI  R21,0x80
000a5c 2757      	EOR  R21,R23
000a5d f411      	BRNE __REPACK0
000a5e 935f      	PUSH R21
000a5f c0cf      	RJMP __ZERORES
                 __REPACK0:
000a60 3f5f      	CPI  R21,0xFF
000a61 f031      	BREQ __REPACK1
000a62 0f66      	LSL  R22
000a63 0c00      	LSL  R0
000a64 9557      	ROR  R21
000a65 9567      	ROR  R22
000a66 2f75      	MOV  R23,R21
000a67 9508      	RET
                 __REPACK1:
000a68 935f      	PUSH R21
000a69 2000      	TST  R0
000a6a f00a      	BRMI __REPACK2
000a6b c0cf      	RJMP __MAXRES
                 __REPACK2:
000a6c c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000a6d e850      	LDI  R21,0x80
000a6e 2e19      	MOV  R1,R25
000a6f 2215      	AND  R1,R21
000a70 0f88      	LSL  R24
000a71 1f99      	ROL  R25
000a72 2795      	EOR  R25,R21
000a73 0f55      	LSL  R21
000a74 9587      	ROR  R24
                 
                 __UNPACK1:
000a75 e850      	LDI  R21,0x80
000a76 2e07      	MOV  R0,R23
000a77 2205      	AND  R0,R21
000a78 0f66      	LSL  R22
000a79 1f77      	ROL  R23
000a7a 2775      	EOR  R23,R21
000a7b 0f55      	LSL  R21
000a7c 9567      	ROR  R22
000a7d 9508      	RET
                 
                 __CFD1U:
000a7e 9468      	SET
000a7f c001      	RJMP __CFD1U0
                 __CFD1:
000a80 94e8      	CLT
                 __CFD1U0:
000a81 935f      	PUSH R21
000a82 dff2      	RCALL __UNPACK1
000a83 3870      	CPI  R23,0x80
000a84 f018      	BRLO __CFD10
000a85 3f7f      	CPI  R23,0xFF
000a86 f408      	BRCC __CFD10
000a87 c0a7      	RJMP __ZERORES
                 __CFD10:
000a88 e156      	LDI  R21,22
000a89 1b57      	SUB  R21,R23
000a8a f4aa      	BRPL __CFD11
000a8b 9551      	NEG  R21
000a8c 3058      	CPI  R21,8
000a8d f40e      	BRTC __CFD19
000a8e 3059      	CPI  R21,9
                 __CFD19:
000a8f f030      	BRLO __CFD17
000a90 efef      	SER  R30
000a91 efff      	SER  R31
000a92 ef6f      	SER  R22
000a93 e77f      	LDI  R23,0x7F
000a94 f977      	BLD  R23,7
000a95 c01a      	RJMP __CFD15
                 __CFD17:
000a96 2777      	CLR  R23
000a97 2355      	TST  R21
000a98 f0b9      	BREQ __CFD15
                 __CFD18:
000a99 0fee      	LSL  R30
000a9a 1fff      	ROL  R31
000a9b 1f66      	ROL  R22
000a9c 1f77      	ROL  R23
000a9d 955a      	DEC  R21
000a9e f7d1      	BRNE __CFD18
000a9f c010      	RJMP __CFD15
                 __CFD11:
000aa0 2777      	CLR  R23
                 __CFD12:
000aa1 3058      	CPI  R21,8
000aa2 f028      	BRLO __CFD13
000aa3 2fef      	MOV  R30,R31
000aa4 2ff6      	MOV  R31,R22
000aa5 2f67      	MOV  R22,R23
000aa6 5058      	SUBI R21,8
000aa7 cff9      	RJMP __CFD12
                 __CFD13:
000aa8 2355      	TST  R21
000aa9 f031      	BREQ __CFD15
                 __CFD14:
000aaa 9576      	LSR  R23
000aab 9567      	ROR  R22
000aac 95f7      	ROR  R31
000aad 95e7      	ROR  R30
000aae 955a      	DEC  R21
000aaf f7d1      	BRNE __CFD14
                 __CFD15:
000ab0 2000      	TST  R0
000ab1 f40a      	BRPL __CFD16
000ab2 d14e      	RCALL __ANEGD1
                 __CFD16:
000ab3 915f      	POP  R21
000ab4 9508      	RET
                 
                 __CDF1U:
000ab5 9468      	SET
000ab6 c001      	RJMP __CDF1U0
                 __CDF1:
000ab7 94e8      	CLT
                 __CDF1U0:
000ab8 9730      	SBIW R30,0
000ab9 4060      	SBCI R22,0
000aba 4070      	SBCI R23,0
000abb f0b1      	BREQ __CDF10
000abc 2400      	CLR  R0
000abd f026      	BRTS __CDF11
000abe 2377      	TST  R23
000abf f412      	BRPL __CDF11
000ac0 9400      	COM  R0
000ac1 d13f      	RCALL __ANEGD1
                 __CDF11:
000ac2 2e17      	MOV  R1,R23
000ac3 e17e      	LDI  R23,30
000ac4 2011      	TST  R1
                 __CDF12:
000ac5 f032      	BRMI __CDF13
000ac6 957a      	DEC  R23
000ac7 0fee      	LSL  R30
000ac8 1fff      	ROL  R31
000ac9 1f66      	ROL  R22
000aca 1c11      	ROL  R1
000acb cff9      	RJMP __CDF12
                 __CDF13:
000acc 2fef      	MOV  R30,R31
000acd 2ff6      	MOV  R31,R22
000ace 2d61      	MOV  R22,R1
000acf 935f      	PUSH R21
000ad0 df8a      	RCALL __REPACK
000ad1 915f      	POP  R21
                 __CDF10:
000ad2 9508      	RET
                 
                 __SWAPACC:
000ad3 934f      	PUSH R20
000ad4 01af      	MOVW R20,R30
000ad5 01fd      	MOVW R30,R26
000ad6 01da      	MOVW R26,R20
000ad7 01ab      	MOVW R20,R22
000ad8 01bc      	MOVW R22,R24
000ad9 01ca      	MOVW R24,R20
000ada 2d40      	MOV  R20,R0
000adb 2c01      	MOV  R0,R1
000adc 2e14      	MOV  R1,R20
000add 914f      	POP  R20
000ade 9508      	RET
                 
                 __UADD12:
000adf 0fea      	ADD  R30,R26
000ae0 1ffb      	ADC  R31,R27
000ae1 1f68      	ADC  R22,R24
000ae2 9508      	RET
                 
                 __NEGMAN1:
000ae3 95e0      	COM  R30
000ae4 95f0      	COM  R31
000ae5 9560      	COM  R22
000ae6 5fef      	SUBI R30,-1
000ae7 4fff      	SBCI R31,-1
000ae8 4f6f      	SBCI R22,-1
000ae9 9508      	RET
                 
                 __SUBF12:
000aea 935f      	PUSH R21
000aeb df81      	RCALL __UNPACK
000aec 3890      	CPI  R25,0x80
000aed f171      	BREQ __ADDF129
000aee e850      	LDI  R21,0x80
000aef 2615      	EOR  R1,R21
                 
000af0 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000af1 935f      	PUSH R21
000af2 df7a      	RCALL __UNPACK
000af3 3890      	CPI  R25,0x80
000af4 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000af5 3870      	CPI  R23,0x80
000af6 f121      	BREQ __ADDF128
                 __ADDF121:
000af7 2f57      	MOV  R21,R23
000af8 1b59      	SUB  R21,R25
000af9 f12b      	BRVS __ADDF1211
000afa f412      	BRPL __ADDF122
000afb dfd7      	RCALL __SWAPACC
000afc cffa      	RJMP __ADDF121
                 __ADDF122:
000afd 3158      	CPI  R21,24
000afe f018      	BRLO __ADDF123
000aff 27aa      	CLR  R26
000b00 27bb      	CLR  R27
000b01 2788      	CLR  R24
                 __ADDF123:
000b02 3058      	CPI  R21,8
000b03 f028      	BRLO __ADDF124
000b04 2fab      	MOV  R26,R27
000b05 2fb8      	MOV  R27,R24
000b06 2788      	CLR  R24
000b07 5058      	SUBI R21,8
000b08 cff9      	RJMP __ADDF123
                 __ADDF124:
000b09 2355      	TST  R21
000b0a f029      	BREQ __ADDF126
                 __ADDF125:
000b0b 9586      	LSR  R24
000b0c 95b7      	ROR  R27
000b0d 95a7      	ROR  R26
000b0e 955a      	DEC  R21
000b0f f7d9      	BRNE __ADDF125
                 __ADDF126:
000b10 2d50      	MOV  R21,R0
000b11 2551      	EOR  R21,R1
000b12 f072      	BRMI __ADDF127
000b13 dfcb      	RCALL __UADD12
000b14 f438      	BRCC __ADDF129
000b15 9567      	ROR  R22
000b16 95f7      	ROR  R31
000b17 95e7      	ROR  R30
000b18 9573      	INC  R23
000b19 f413      	BRVC __ADDF129
000b1a c020      	RJMP __MAXRES
                 __ADDF128:
000b1b dfb7      	RCALL __SWAPACC
                 __ADDF129:
000b1c df3e      	RCALL __REPACK
000b1d 915f      	POP  R21
000b1e 9508      	RET
                 __ADDF1211:
000b1f f7d8      	BRCC __ADDF128
000b20 cffb      	RJMP __ADDF129
                 __ADDF127:
000b21 1bea      	SUB  R30,R26
000b22 0bfb      	SBC  R31,R27
000b23 0b68      	SBC  R22,R24
000b24 f051      	BREQ __ZERORES
000b25 f410      	BRCC __ADDF1210
000b26 9400      	COM  R0
000b27 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000b28 2366      	TST  R22
000b29 f392      	BRMI __ADDF129
000b2a 0fee      	LSL  R30
000b2b 1fff      	ROL  R31
000b2c 1f66      	ROL  R22
000b2d 957a      	DEC  R23
000b2e f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000b2f 27ee      	CLR  R30
000b30 27ff      	CLR  R31
000b31 2766      	CLR  R22
000b32 2777      	CLR  R23
000b33 915f      	POP  R21
000b34 9508      	RET
                 
                 __MINRES:
000b35 efef      	SER  R30
000b36 efff      	SER  R31
000b37 e76f      	LDI  R22,0x7F
000b38 ef7f      	SER  R23
000b39 915f      	POP  R21
000b3a 9508      	RET
                 
                 __MAXRES:
000b3b efef      	SER  R30
000b3c efff      	SER  R31
000b3d e76f      	LDI  R22,0x7F
000b3e e77f      	LDI  R23,0x7F
000b3f 915f      	POP  R21
000b40 9508      	RET
                 
                 __MULF12:
000b41 935f      	PUSH R21
000b42 df2a      	RCALL __UNPACK
000b43 3870      	CPI  R23,0x80
000b44 f351      	BREQ __ZERORES
000b45 3890      	CPI  R25,0x80
000b46 f341      	BREQ __ZERORES
000b47 2401      	EOR  R0,R1
000b48 9408      	SEC
000b49 1f79      	ADC  R23,R25
000b4a f423      	BRVC __MULF124
000b4b f31c      	BRLT __ZERORES
                 __MULF125:
000b4c 2000      	TST  R0
000b4d f33a      	BRMI __MINRES
000b4e cfec      	RJMP __MAXRES
                 __MULF124:
000b4f 920f      	PUSH R0
000b50 931f      	PUSH R17
000b51 932f      	PUSH R18
000b52 933f      	PUSH R19
000b53 934f      	PUSH R20
000b54 2711      	CLR  R17
000b55 2722      	CLR  R18
000b56 2799      	CLR  R25
000b57 9f68      	MUL  R22,R24
000b58 01a0      	MOVW R20,R0
000b59 9f8f      	MUL  R24,R31
000b5a 2d30      	MOV  R19,R0
000b5b 0d41      	ADD  R20,R1
000b5c 1f59      	ADC  R21,R25
000b5d 9f6b      	MUL  R22,R27
000b5e 0d30      	ADD  R19,R0
000b5f 1d41      	ADC  R20,R1
000b60 1f59      	ADC  R21,R25
000b61 9f8e      	MUL  R24,R30
000b62 d027      	RCALL __MULF126
000b63 9fbf      	MUL  R27,R31
000b64 d025      	RCALL __MULF126
000b65 9f6a      	MUL  R22,R26
000b66 d023      	RCALL __MULF126
000b67 9fbe      	MUL  R27,R30
000b68 d01d      	RCALL __MULF127
000b69 9faf      	MUL  R26,R31
000b6a d01b      	RCALL __MULF127
000b6b 9fae      	MUL  R26,R30
000b6c 0d11      	ADD  R17,R1
000b6d 1f29      	ADC  R18,R25
000b6e 1f39      	ADC  R19,R25
000b6f 1f49      	ADC  R20,R25
000b70 1f59      	ADC  R21,R25
000b71 2fe3      	MOV  R30,R19
000b72 2ff4      	MOV  R31,R20
000b73 2f65      	MOV  R22,R21
000b74 2f52      	MOV  R21,R18
000b75 914f      	POP  R20
000b76 913f      	POP  R19
000b77 912f      	POP  R18
000b78 911f      	POP  R17
000b79 900f      	POP  R0
000b7a 2366      	TST  R22
000b7b f02a      	BRMI __MULF122
000b7c 0f55      	LSL  R21
000b7d 1fee      	ROL  R30
000b7e 1fff      	ROL  R31
000b7f 1f66      	ROL  R22
000b80 c002      	RJMP __MULF123
                 __MULF122:
000b81 9573      	INC  R23
000b82 f24b      	BRVS __MULF125
                 __MULF123:
000b83 decd      	RCALL __ROUND_REPACK
000b84 915f      	POP  R21
000b85 9508      	RET
                 
                 __MULF127:
000b86 0d10      	ADD  R17,R0
000b87 1d21      	ADC  R18,R1
000b88 1f39      	ADC  R19,R25
000b89 c002      	RJMP __MULF128
                 __MULF126:
000b8a 0d20      	ADD  R18,R0
000b8b 1d31      	ADC  R19,R1
                 __MULF128:
000b8c 1f49      	ADC  R20,R25
000b8d 1f59      	ADC  R21,R25
000b8e 9508      	RET
                 
                 __DIVF21:
000b8f 935f      	PUSH R21
000b90 dedc      	RCALL __UNPACK
000b91 3870      	CPI  R23,0x80
000b92 f421      	BRNE __DIVF210
000b93 2011      	TST  R1
                 __DIVF211:
000b94 f40a      	BRPL __DIVF219
000b95 cf9f      	RJMP __MINRES
                 __DIVF219:
000b96 cfa4      	RJMP __MAXRES
                 __DIVF210:
000b97 3890      	CPI  R25,0x80
000b98 f409      	BRNE __DIVF218
                 __DIVF217:
000b99 cf95      	RJMP __ZERORES
                 __DIVF218:
000b9a 2401      	EOR  R0,R1
000b9b 9408      	SEC
000b9c 0b97      	SBC  R25,R23
000b9d f41b      	BRVC __DIVF216
000b9e f3d4      	BRLT __DIVF217
000b9f 2000      	TST  R0
000ba0 cff3      	RJMP __DIVF211
                 __DIVF216:
000ba1 2f79      	MOV  R23,R25
000ba2 931f      	PUSH R17
000ba3 932f      	PUSH R18
000ba4 933f      	PUSH R19
000ba5 934f      	PUSH R20
000ba6 2411      	CLR  R1
000ba7 2711      	CLR  R17
000ba8 2722      	CLR  R18
000ba9 2733      	CLR  R19
000baa 2744      	CLR  R20
000bab 2755      	CLR  R21
000bac e290      	LDI  R25,32
                 __DIVF212:
000bad 17ae      	CP   R26,R30
000bae 07bf      	CPC  R27,R31
000baf 0786      	CPC  R24,R22
000bb0 0741      	CPC  R20,R17
000bb1 f030      	BRLO __DIVF213
000bb2 1bae      	SUB  R26,R30
000bb3 0bbf      	SBC  R27,R31
000bb4 0b86      	SBC  R24,R22
000bb5 0b41      	SBC  R20,R17
000bb6 9408      	SEC
000bb7 c001      	RJMP __DIVF214
                 __DIVF213:
000bb8 9488      	CLC
                 __DIVF214:
000bb9 1f55      	ROL  R21
000bba 1f22      	ROL  R18
000bbb 1f33      	ROL  R19
000bbc 1c11      	ROL  R1
000bbd 1faa      	ROL  R26
000bbe 1fbb      	ROL  R27
000bbf 1f88      	ROL  R24
000bc0 1f44      	ROL  R20
000bc1 959a      	DEC  R25
000bc2 f751      	BRNE __DIVF212
000bc3 01f9      	MOVW R30,R18
000bc4 2d61      	MOV  R22,R1
000bc5 914f      	POP  R20
000bc6 913f      	POP  R19
000bc7 912f      	POP  R18
000bc8 911f      	POP  R17
000bc9 2366      	TST  R22
000bca f032      	BRMI __DIVF215
000bcb 0f55      	LSL  R21
000bcc 1fee      	ROL  R30
000bcd 1fff      	ROL  R31
000bce 1f66      	ROL  R22
000bcf 957a      	DEC  R23
000bd0 f243      	BRVS __DIVF217
                 __DIVF215:
000bd1 de7f      	RCALL __ROUND_REPACK
000bd2 915f      	POP  R21
000bd3 9508      	RET
                 
                 __CMPF12:
000bd4 2399      	TST  R25
000bd5 f09a      	BRMI __CMPF120
000bd6 2377      	TST  R23
000bd7 f042      	BRMI __CMPF121
000bd8 1797      	CP   R25,R23
000bd9 f048      	BRLO __CMPF122
000bda f429      	BRNE __CMPF121
000bdb 17ae      	CP   R26,R30
000bdc 07bf      	CPC  R27,R31
000bdd 0786      	CPC  R24,R22
000bde f020      	BRLO __CMPF122
000bdf f031      	BREQ __CMPF123
                 __CMPF121:
000be0 9498      	CLZ
000be1 9488      	CLC
000be2 9508      	RET
                 __CMPF122:
000be3 9498      	CLZ
000be4 9408      	SEC
000be5 9508      	RET
                 __CMPF123:
000be6 9418      	SEZ
000be7 9488      	CLC
000be8 9508      	RET
                 __CMPF120:
000be9 2377      	TST  R23
000bea f7c2      	BRPL __CMPF122
000beb 1797      	CP   R25,R23
000bec f398      	BRLO __CMPF121
000bed f7a9      	BRNE __CMPF122
000bee 17ea      	CP   R30,R26
000bef 07fb      	CPC  R31,R27
000bf0 0768      	CPC  R22,R24
000bf1 f388      	BRLO __CMPF122
000bf2 f399      	BREQ __CMPF123
000bf3 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000bf4 2400      	CLR  R0
000bf5 0daf      	ADD  R26,R15
000bf6 1db0      	ADC  R27,R0
000bf7 9508      	RET
                 
                 __SUBD12:
000bf8 1bea      	SUB  R30,R26
000bf9 0bfb      	SBC  R31,R27
000bfa 0b68      	SBC  R22,R24
000bfb 0b79      	SBC  R23,R25
000bfc 9508      	RET
                 
                 __ANEGW1:
000bfd 95f1      	NEG  R31
000bfe 95e1      	NEG  R30
000bff 40f0      	SBCI R31,0
000c00 9508      	RET
                 
                 __ANEGD1:
000c01 95f0      	COM  R31
000c02 9560      	COM  R22
000c03 9570      	COM  R23
000c04 95e1      	NEG  R30
000c05 4fff      	SBCI R31,-1
000c06 4f6f      	SBCI R22,-1
000c07 4f7f      	SBCI R23,-1
000c08 9508      	RET
                 
                 __LSRB12:
000c09 23ee      	TST  R30
000c0a 2e0e      	MOV  R0,R30
000c0b 2fea      	MOV  R30,R26
000c0c f019      	BREQ __LSRB12R
                 __LSRB12L:
000c0d 95e6      	LSR  R30
000c0e 940a      	DEC  R0
000c0f f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000c10 9508      	RET
                 
                 __CBD1:
000c11 2ffe      	MOV  R31,R30
000c12 0fff      	ADD  R31,R31
000c13 0bff      	SBC  R31,R31
000c14 2f6f      	MOV  R22,R31
000c15 2f7f      	MOV  R23,R31
000c16 9508      	RET
                 
                 __CWD1:
000c17 2f6f      	MOV  R22,R31
000c18 0f66      	ADD  R22,R22
000c19 0b66      	SBC  R22,R22
000c1a 2f76      	MOV  R23,R22
000c1b 9508      	RET
                 
                 __MULW12U:
000c1c 9ffa      	MUL  R31,R26
000c1d 2df0      	MOV  R31,R0
000c1e 9feb      	MUL  R30,R27
000c1f 0df0      	ADD  R31,R0
000c20 9fea      	MUL  R30,R26
000c21 2de0      	MOV  R30,R0
000c22 0df1      	ADD  R31,R1
000c23 9508      	RET
                 
                 __MULW12:
000c24 d07e      	RCALL __CHKSIGNW
000c25 dff6      	RCALL __MULW12U
000c26 f40e      	BRTC __MULW121
000c27 dfd5      	RCALL __ANEGW1
                 __MULW121:
000c28 9508      	RET
                 
                 __DIVB21U:
000c29 2400      	CLR  R0
000c2a e098      	LDI  R25,8
                 __DIVB21U1:
000c2b 0faa      	LSL  R26
000c2c 1c00      	ROL  R0
000c2d 1a0e      	SUB  R0,R30
000c2e f410      	BRCC __DIVB21U2
000c2f 0e0e      	ADD  R0,R30
000c30 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000c31 60a1      	SBR  R26,1
                 __DIVB21U3:
000c32 959a      	DEC  R25
000c33 f7b9      	BRNE __DIVB21U1
000c34 2fea      	MOV  R30,R26
000c35 2da0      	MOV  R26,R0
000c36 9508      	RET
                 
                 __DIVB21:
000c37 d05f      	RCALL __CHKSIGNB
000c38 dff0      	RCALL __DIVB21U
000c39 f40e      	BRTC __DIVB211
000c3a 95e1      	NEG  R30
                 __DIVB211:
000c3b 9508      	RET
                 
                 __DIVW21U:
000c3c 2400      	CLR  R0
000c3d 2411      	CLR  R1
000c3e e190      	LDI  R25,16
                 __DIVW21U1:
000c3f 0faa      	LSL  R26
000c40 1fbb      	ROL  R27
000c41 1c00      	ROL  R0
000c42 1c11      	ROL  R1
000c43 1a0e      	SUB  R0,R30
000c44 0a1f      	SBC  R1,R31
000c45 f418      	BRCC __DIVW21U2
000c46 0e0e      	ADD  R0,R30
000c47 1e1f      	ADC  R1,R31
000c48 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000c49 60a1      	SBR  R26,1
                 __DIVW21U3:
000c4a 959a      	DEC  R25
000c4b f799      	BRNE __DIVW21U1
000c4c 01fd      	MOVW R30,R26
000c4d 01d0      	MOVW R26,R0
000c4e 9508      	RET
                 
                 __DIVW21:
000c4f d053      	RCALL __CHKSIGNW
000c50 dfeb      	RCALL __DIVW21U
000c51 f40e      	BRTC __DIVW211
000c52 dfaa      	RCALL __ANEGW1
                 __DIVW211:
000c53 9508      	RET
                 
                 __DIVD21U:
000c54 933f      	PUSH R19
000c55 934f      	PUSH R20
000c56 935f      	PUSH R21
000c57 2400      	CLR  R0
000c58 2411      	CLR  R1
000c59 2744      	CLR  R20
000c5a 2755      	CLR  R21
000c5b e230      	LDI  R19,32
                 __DIVD21U1:
000c5c 0faa      	LSL  R26
000c5d 1fbb      	ROL  R27
000c5e 1f88      	ROL  R24
000c5f 1f99      	ROL  R25
000c60 1c00      	ROL  R0
000c61 1c11      	ROL  R1
000c62 1f44      	ROL  R20
000c63 1f55      	ROL  R21
000c64 1a0e      	SUB  R0,R30
000c65 0a1f      	SBC  R1,R31
000c66 0b46      	SBC  R20,R22
000c67 0b57      	SBC  R21,R23
000c68 f428      	BRCC __DIVD21U2
000c69 0e0e      	ADD  R0,R30
000c6a 1e1f      	ADC  R1,R31
000c6b 1f46      	ADC  R20,R22
000c6c 1f57      	ADC  R21,R23
000c6d c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000c6e 60a1      	SBR  R26,1
                 __DIVD21U3:
000c6f 953a      	DEC  R19
000c70 f759      	BRNE __DIVD21U1
000c71 01fd      	MOVW R30,R26
000c72 01bc      	MOVW R22,R24
000c73 01d0      	MOVW R26,R0
000c74 01ca      	MOVW R24,R20
000c75 915f      	POP  R21
000c76 914f      	POP  R20
000c77 913f      	POP  R19
000c78 9508      	RET
                 
                 __MODB21:
000c79 94e8      	CLT
000c7a ffa7      	SBRS R26,7
000c7b c002      	RJMP __MODB211
000c7c 95a1      	NEG  R26
000c7d 9468      	SET
                 __MODB211:
000c7e fde7      	SBRC R30,7
000c7f 95e1      	NEG  R30
000c80 dfa8      	RCALL __DIVB21U
000c81 2fea      	MOV  R30,R26
000c82 f40e      	BRTC __MODB212
000c83 95e1      	NEG  R30
                 __MODB212:
000c84 9508      	RET
                 
                 __MODW21:
000c85 94e8      	CLT
000c86 ffb7      	SBRS R27,7
000c87 c004      	RJMP __MODW211
000c88 95a0      	COM  R26
000c89 95b0      	COM  R27
000c8a 9611      	ADIW R26,1
000c8b 9468      	SET
                 __MODW211:
000c8c fdf7      	SBRC R31,7
000c8d df6f      	RCALL __ANEGW1
000c8e dfad      	RCALL __DIVW21U
000c8f 01fd      	MOVW R30,R26
000c90 f40e      	BRTC __MODW212
000c91 df6b      	RCALL __ANEGW1
                 __MODW212:
000c92 9508      	RET
                 
                 __MODD21U:
000c93 dfc0      	RCALL __DIVD21U
000c94 01fd      	MOVW R30,R26
000c95 01bc      	MOVW R22,R24
000c96 9508      	RET
                 
                 __CHKSIGNB:
000c97 94e8      	CLT
000c98 ffe7      	SBRS R30,7
000c99 c002      	RJMP __CHKSB1
000c9a 95e1      	NEG  R30
000c9b 9468      	SET
                 __CHKSB1:
000c9c ffa7      	SBRS R26,7
000c9d c004      	RJMP __CHKSB2
000c9e 95a1      	NEG  R26
000c9f f800      	BLD  R0,0
000ca0 9403      	INC  R0
000ca1 fa00      	BST  R0,0
                 __CHKSB2:
000ca2 9508      	RET
                 
                 __CHKSIGNW:
000ca3 94e8      	CLT
000ca4 fff7      	SBRS R31,7
000ca5 c002      	RJMP __CHKSW1
000ca6 df56      	RCALL __ANEGW1
000ca7 9468      	SET
                 __CHKSW1:
000ca8 ffb7      	SBRS R27,7
000ca9 c006      	RJMP __CHKSW2
000caa 95a0      	COM  R26
000cab 95b0      	COM  R27
000cac 9611      	ADIW R26,1
000cad f800      	BLD  R0,0
000cae 9403      	INC  R0
000caf fa00      	BST  R0,0
                 __CHKSW2:
000cb0 9508      	RET
                 
                 __GETW1P:
000cb1 91ed      	LD   R30,X+
000cb2 91fc      	LD   R31,X
000cb3 9711      	SBIW R26,1
000cb4 9508      	RET
                 
                 __GETD1P:
000cb5 91ed      	LD   R30,X+
000cb6 91fd      	LD   R31,X+
000cb7 916d      	LD   R22,X+
000cb8 917c      	LD   R23,X
000cb9 9713      	SBIW R26,3
000cba 9508      	RET
                 
                 __GETD1P_INC:
000cbb 91ed      	LD   R30,X+
000cbc 91fd      	LD   R31,X+
000cbd 916d      	LD   R22,X+
000cbe 917d      	LD   R23,X+
000cbf 9508      	RET
                 
                 __PUTDP1_DEC:
000cc0 937e      	ST   -X,R23
000cc1 936e      	ST   -X,R22
000cc2 93fe      	ST   -X,R31
000cc3 93ee      	ST   -X,R30
000cc4 9508      	RET
                 
                 __GETD1S0:
000cc5 81e8      	LD   R30,Y
000cc6 81f9      	LDD  R31,Y+1
000cc7 816a      	LDD  R22,Y+2
000cc8 817b      	LDD  R23,Y+3
000cc9 9508      	RET
                 
                 __GETD2S0:
000cca 81a8      	LD   R26,Y
000ccb 81b9      	LDD  R27,Y+1
000ccc 818a      	LDD  R24,Y+2
000ccd 819b      	LDD  R25,Y+3
000cce 9508      	RET
                 
                 __PUTD1S0:
000ccf 83e8      	ST   Y,R30
000cd0 83f9      	STD  Y+1,R31
000cd1 836a      	STD  Y+2,R22
000cd2 837b      	STD  Y+3,R23
000cd3 9508      	RET
                 
                 __PUTPARD1:
000cd4 937a      	ST   -Y,R23
000cd5 936a      	ST   -Y,R22
000cd6 93fa      	ST   -Y,R31
000cd7 93ea      	ST   -Y,R30
000cd8 9508      	RET
                 
                 __PUTPARD2:
000cd9 939a      	ST   -Y,R25
000cda 938a      	ST   -Y,R24
000cdb 93ba      	ST   -Y,R27
000cdc 93aa      	ST   -Y,R26
000cdd 9508      	RET
                 
                 __SWAPD12:
000cde 2e18      	MOV  R1,R24
000cdf 2f86      	MOV  R24,R22
000ce0 2d61      	MOV  R22,R1
000ce1 2e19      	MOV  R1,R25
000ce2 2f97      	MOV  R25,R23
000ce3 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000ce4 2e1b      	MOV  R1,R27
000ce5 2fbf      	MOV  R27,R31
000ce6 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000ce7 2e1a      	MOV  R1,R26
000ce8 2fae      	MOV  R26,R30
000ce9 2de1      	MOV  R30,R1
000cea 9508      	RET
                 
                 __COPYMML:
000ceb 2799      	CLR  R25
                 __COPYMM:
000cec 93ef      	PUSH R30
000ced 93ff      	PUSH R31
                 __COPYMM0:
000cee 9161      	LD   R22,Z+
000cef 936d      	ST   X+,R22
000cf0 9701      	SBIW R24,1
000cf1 f7e1      	BRNE __COPYMM0
000cf2 91ff      	POP  R31
000cf3 91ef      	POP  R30
000cf4 9508      	RET
                 
                 __CPD10:
000cf5 9730      	SBIW R30,0
000cf6 4060      	SBCI R22,0
000cf7 4070      	SBCI R23,0
000cf8 9508      	RET
                 
                 __SAVELOCR6:
000cf9 935a      	ST   -Y,R21
                 __SAVELOCR5:
000cfa 934a      	ST   -Y,R20
                 __SAVELOCR4:
000cfb 933a      	ST   -Y,R19
                 __SAVELOCR3:
000cfc 932a      	ST   -Y,R18
                 __SAVELOCR2:
000cfd 931a      	ST   -Y,R17
000cfe 930a      	ST   -Y,R16
000cff 9508      	RET
                 
                 __LOADLOCR6:
000d00 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000d01 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000d02 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000d03 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000d04 8119      	LDD  R17,Y+1
000d05 8108      	LD   R16,Y
000d06 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000d07 0fac      	ADD  R26,R28
000d08 1fbd      	ADC  R27,R29
                 __INITLOC0:
000d09 9005      	LPM  R0,Z+
000d0a 920d      	ST   X+,R0
000d0b 958a      	DEC  R24
000d0c f7e1      	BRNE __INITLOC0
000d0d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  81 r1 :  43 r2 :  11 r3 :   0 r4 :  19 r5 :   7 r6 :   4 r7 :   9 
r8 :   2 r9 :   4 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   8 
r16:  57 r17:  87 r18:  48 r19:  35 r20:  50 r21:  90 r22: 131 r23: 116 
r24:  80 r25:  66 r26: 358 r27: 129 r28:  49 r29:   2 r30: 589 r31: 207 
x  :  59 y  : 484 z  :  41 
Registers used: 29 out of 35 (82.9%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  25 add   :  23 
adiw  :  49 and   :   6 andi  :   9 asr   :   0 bclr  :   0 bld   :  12 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   1 break :   0 breq  :  52 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   2 brmi  :  11 brne  : 102 brpl  :   9 brsh  :  18 brtc  :   7 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  : 235 
cbi   :  20 cbr   :   1 clc   :   4 clh   :   0 cli   :   1 cln   :   0 
clr   :  72 cls   :   0 clt   :   9 clv   :   0 clz   :   2 com   :  12 
cp    :  30 cpc   :  36 cpi   : 116 cpse  :   0 dec   :  21 des   :   0 
eor   :   8 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   6 inc   :   6 jmp   :  37 ld    :  85 ldd   : 243 ldi   : 314 
lds   :  12 lpm   :  13 lsl   :  16 lsr   :   4 mov   : 109 movw  :  65 
mul   :  17 muls  :   3 mulsu :   0 neg   :  11 nop   :   1 or    :   2 
ori   :  10 out   :  25 pop   :  24 push  :  24 rcall : 115 ret   : 119 
reti  :   1 rjmp  : 177 rol   :  36 ror   :  15 sbc   :  15 sbci  :  28 
sbi   :  16 sbic  :   2 sbis  :   4 sbiw  :  39 sbr   :   5 sbrc  :  10 
sbrs  :  23 sec   :   6 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :  12 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 141 std   : 103 sts   :   6 sub   :   8 subi  :  57 swap  :   2 
tst   :  27 wdr   :   1 
Instructions used: 85 out of 116 (73.3%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001a1c   6496    188   6684   16384  40.8%
[.dseg] 0x000060 0x0001b3      0     83     83    1024   8.1%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 9 warnings
